<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NETXP.Controls</name>
    </assembly>
    <members>
        <member name="T:NETXP.Controls.AutoTextBox">
            <summary>
            AutoTextBox is a text box that saves all the strings the user types to an XML file.
            </summary>
        </member>
        <member name="M:NETXP.Controls.AutoTextBox.#ctor">
            <summary>
            Creates an auto-textbox.
            </summary>
        </member>
        <member name="M:NETXP.Controls.AutoTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.AutoTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.AutoTextBox.DestroyHandle">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.AutoTextBox.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.AutoTextBox.OnValidated(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.AutoTextBox.AutoCompleteHeader">
            <summary>
            The XML file name to use, without the extension.
            </summary>
        </member>
        <member name="T:NETXP.Controls.BalloonHelp">
            <summary>
            Encapsulates the functionality of a balloon-shaped window.
            </summary>
        </member>
        <member name="T:NETXP.Controls.BalloonWindow">
            <summary>
            BalloonWindow is a special form in the shape of a balloon.
            </summary>
        </member>
        <member name="F:NETXP.Controls.BalloonWindow.TipMargin">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:NETXP.Controls.BalloonWindow.TipTail">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.#ctor">
            <summary>
            Constructs a BalloonWindow object.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.RecalcLayout">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.RepositionWindow(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="oldAnchorPoint">Internal.</param>
            <param name="newAnchorPoint">Internal.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.OnNCCalcSize(System.Drawing.Rectangle)">
            <summary>
            Internal
            </summary>
            <param name="windowRect">Internal</param>
            <returns>Internal</returns>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.OnNCPaint(System.Drawing.Graphics)">
            <summary>
            Internal
            </summary>
            <param name="g">Internal</param>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Internal
            </summary>
            <param name="m">Internal</param>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.OnLoad(System.EventArgs)">
            <summary>
            An event handler.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.OnResize(System.EventArgs)">
            <summary>
            An event handler.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.AnchorPointFromControl(System.Windows.Forms.Control)">
            <summary>
            Creates an anchor point from a control.
            </summary>
            <param name="anchorControl">The control whose location to use.</param>
            <returns>A Point.</returns>
        </member>
        <member name="M:NETXP.Controls.BalloonWindow.ShowBalloon(System.Windows.Forms.Control)">
            <summary>
            Shows this window anchored to a control.
            </summary>
            <param name="anchorControl">The control to anchor to.</param>
        </member>
        <member name="P:NETXP.Controls.BalloonWindow.AnchorPoint">
            <summary>
            The point to which this window is anchored.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonWindow.Quadrant">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonWindow.CreateParams">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.BalloonWindow.BallonQuadrant">
            <summary>
            Describes the locations in the balloon.
            </summary>
        </member>
        <member name="F:NETXP.Controls.BalloonWindow.BallonQuadrant.TopLeft">
            <summary>
            Top left corner.
            </summary>
        </member>
        <member name="F:NETXP.Controls.BalloonWindow.BallonQuadrant.TopRight">
            <summary>
            Top right corner.
            </summary>
        </member>
        <member name="F:NETXP.Controls.BalloonWindow.BallonQuadrant.BottomLeft">
            <summary>
            Bottom left corner.
            </summary>
        </member>
        <member name="F:NETXP.Controls.BalloonWindow.BallonQuadrant.BottomRight">
            <summary>
            Bottom right corner.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.#ctor">
            <summary>
            Constructor for BalloonHelp window.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.CalcClientSize">
            <summary>
            Calculates the client size of the window.
            </summary>
            <returns>A size.</returns>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Responds to the OnPaint handler.
            </summary>
            <param name="e">The event's arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.OnLoad(System.EventArgs)">
            <summary>
            Responds to the OnLoad handler.
            </summary>
            <param name="e">The event's arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.OnDeactivateApp(System.EventArgs)">
            <summary>
            Responds to the OnDeactivateApp handler.
            </summary>
            <param name="e">The event's arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>
            Responds to the window procedure.
            </summary>
            <param name="m">The event's arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Internal
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.OnClosed(System.EventArgs)">
            <summary>
            Responds to the OnClosed handler.
            </summary>
            <param name="e">The event's arguments.</param>
        </member>
        <member name="M:NETXP.Controls.BalloonHelp.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Internal
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.Timeout">
            <summary>
            The amount of time until the window disappears.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.ShowCloseButton">
            <summary>
            Show close button or not?
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.EnableTimeout">
            <summary>
            Enable automatic closing of this window after a certain interval.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.CloseOnMouseClick">
            <summary>
            Allow this window to close when clicked.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.CloseOnKeyPress">
            <summary>
            Close this window when a key is pressed.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.CloseOnMouseMove">
            <summary>
            Close this window when mouse is moved.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.CloseOnDeactivate">
            <summary>
            Close this window when it is deactivated.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.Content">
            <summary>
            The text shown on the balloon window.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.Text">
            <summary>
            The window's title.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.Caption">
            <summary>
            The caption shown next to the icon.
            </summary>
        </member>
        <member name="P:NETXP.Controls.BalloonHelp.CaptionFont">
            <summary>
            The font of the caption.
            </summary>
        </member>
        <member name="T:NETXP.Controls.ColorButton">
            <summary>
            Provides a button which invokes a color picker control when clicked.
            </summary>
        </member>
        <member name="T:NETXP.Controls.XPButton">
            <summary>
            XPButton extends the Button control by providing an Office-XP look
            or a Windows XP skinned look PLUS an icon.
            </summary>
        </member>
        <member name="F:NETXP.Controls.XPButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPButton.#ctor">
            <summary>
            Creates a new XPButton.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>
            Not implemented.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnGotFocus(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnLostFocus(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPButton.DrawXpButton(System.IntPtr,System.IntPtr,System.Drawing.Rectangle,NETXP.Controls.XPButton.DrawingModes)">
            <summary>
            Draws a Windows XP style button.
            </summary>
            <param name="hTheme">The theme.</param>
            <param name="hDC">A managed pointer containing the handle to a control's device context.</param>
            <param name="bounds">A Rectangle structure containing the bounds of the control to draw on.</param>
            <param name="mode">The drawing mode.</param>
        </member>
        <member name="M:NETXP.Controls.XPButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Calling the base class OnPaint
            </summary>
            <param name="pe"></param>
        </member>
        <member name="P:NETXP.Controls.XPButton.UseXPThemes">
            <summary>
            Indicates whether or not to use Windows XP visual styles.
            Enabling this does not allow setting custom colors for the button.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPButton.EnableFade">
            <summary>
            Allow gradual rollover fade?
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPButton.ImageAlign">
            <summary>
            Overridden for new default value.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ColorButton.#ctor">
            <summary>
            Creates a ColorButton.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ColorButton.OnClick(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.ColorButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal function.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:NETXP.Controls.ColorButton.ShowPopup">
            <summary>
            Raised when the popup form is shown.
            </summary>
        </member>
        <member name="E:NETXP.Controls.ColorButton.CenterColorChanged">
            <summary>
            Raised when the center color has changed either programmatically or due to user selection.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorButton.Text">
            <summary>
            Hides an inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorButton.CenterColor">
            <summary>
            The color displayed on the button.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorButton.MoreColorsButtonText">
            <summary>
            Gets or sets the text to be shown on the More Colors button.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorButton.DescriptionText">
            <summary>
            Gets or sets the text to be shown on the description label.
            </summary>
        </member>
        <member name="T:NETXP.Controls.ColorForm">
            <summary>
            This form implements a color picker.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ColorForm.#ctor">
            <summary>
            Creates a ColorForm.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ColorForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:NETXP.Controls.ColorForm.ShowPopup(System.Windows.Forms.Form,System.Drawing.Point,System.Boolean)">
            <summary>
            Shows the color form.
            </summary>
            <param name="owner">The owner form.</param>
            <param name="location">The location where the form is shown.</param>
            <param name="modal">Is this a modal form?</param>
        </member>
        <member name="P:NETXP.Controls.ColorForm.MoreColorsButtonText">
            <summary>
            Gets or sets the text to be shown on the More Colors button.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorForm.DescriptionText">
            <summary>
            Gets or sets the text to be shown on the description label.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorForm.Color">
            <summary>
            Gets the selected color.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ColorForm.CreateParams">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.AutoCompleteFlags">
            <summary>
            A simple enumeration that wraps various auto complete flags of SHAutoComplete.
            See documenation of SHAutoComplete for details
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.FileSystem">
            <summary>
            This includes the File System as well as the rest of the shell (Desktop\My Computer\Control Panel\)
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.URLHistory">
            <summary>
            URLs in the User's History
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.URLMRU">
            <summary>
            URLs in the User's Recently Used list.
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.UseTab">
            <summary>
            Use the tab to move thru the autocomplete possibilities instead of to the next dialog/window control.
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.FileSystemOnly">
            <summary>
            This includes the File System
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.FileSystemDirs">
            <summary>
            Same as FileSystemOnly except it only includes directories, UNC servers, and UNC server shares.
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.AutoSuggestForceOn">
            <summary>
            Ignore the registry default and force the auto suggest feature on.
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.AutoSuggestForceOff">
            <summary>
            Ignore the registry default and force the auto suggest feature off
            </summary>
        </member>
        <member name="F:NETXP.Controls.AutoCompleteFlags.AutoAppendForceOn">
            <summary>
            Ignore the registry default and force the auto append on. 
            </summary>
        </member>
        <member name="T:NETXP.Controls.MRUKeyHive">
            <summary>
            Enumeration for possible types of registry base keys for storing most recntly typed URLs
            </summary>
        </member>
        <member name="F:NETXP.Controls.MRUKeyHive.CurrentUser">
            <summary>
            Value that indicates HKEY_CURRENT_USER should be used for MRUKey property
            </summary>
        </member>
        <member name="F:NETXP.Controls.MRUKeyHive.LocalMachine">
            <summary>
            Value that indicates HKEY_LOCAL_MACHINE should be used for MRUKey property
            </summary>
        </member>
        <member name="T:NETXP.Controls.ComboBoxExItem">
            <summary>
            ComboBoxExItem describes a ComboBoxEx item.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItem.#ctor">
            <summary>
            Creates a new, blank ComboBoxEx item.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItem.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Creates a new ComboBoxEx item from these parameters.
            </summary>
            <param name="imageIndex">The image index of the item.</param>
            <param name="text">The item's text.</param>
            <param name="level">The item's level (as in a tree view, indentation level)</param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItem.Empty">
            <summary>
            Empties the item.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItem.ToString">
            <summary>
            Provides a string representation of the item using the item's text.
            </summary>
            <returns>The item's text.</returns>
        </member>
        <member name="E:NETXP.Controls.ComboBoxExItem.Changed">
            <summary>
            Occurs when the item has changed.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxExItem.ImageList">
            <summary>
            The item's image list.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxExItem.ImageIndex">
            <summary>
            The item's image index.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxExItem.Text">
            <summary>
            The item's text.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxExItem.Level">
            <summary>
            The item's indentation level (to simulate tree view)
            </summary>
        </member>
        <member name="T:NETXP.Controls.ComboBoxExItemCollection">
            <summary>
            Internal. Do not use.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.#ctor(System.Windows.Forms.ImageList,System.Windows.Forms.ComboBox)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="imgList"></param>
            <param name="owner"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Internal
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.OnClear">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.OnClearComplete">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.Add(NETXP.Controls.ComboBoxExItem)">
            <summary>
            Internal
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.AddRange(NETXP.Controls.ComboBoxExItem[])">
            <summary>
            Internal
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.Insert(System.Int32,NETXP.Controls.ComboBoxExItem)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.RemoveAt(System.Int32)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.Remove(NETXP.Controls.ComboBoxExItem)">
            <summary>
            Internal
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.Contains(NETXP.Controls.ComboBoxExItem)">
            <summary>
            Internal
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.IndexOf(NETXP.Controls.ComboBoxExItem)">
            <summary>
            Internal
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.ComboBoxExItemCollection.RaiseChanged">
            <summary>
            Internal
            </summary>
        </member>
        <member name="E:NETXP.Controls.ComboBoxExItemCollection.Changed">
            <summary>
            Internal
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxExItemCollection.ImageList">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxExItemCollection.Item(System.Int32)">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.ComboBoxEx">
            <summary>
            ComboBoxEx allows specifically the retrieval of recently typed URLs
            and file paths, as well as items with icons.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxEx.#ctor">
            <summary>
            Constructs a ComboBoxEx.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxEx.OnValidated(System.EventArgs)">
            <summary>
            Writes the recntly typed URL to the registry if it is not already there
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxEx.OnHandleCreated(System.EventArgs)">
            <summary>
            Finds the handle to the edit control and calls SHAutoComplete on it.
            Also fills the combobox from the values read from the registry
            </summary>
            <param name="e">Ignored</param>
        </member>
        <member name="M:NETXP.Controls.ComboBoxEx.MRUFill">
            <summary>
            Utility function to fill the combob box most recently typed URLs read from registry.
            </summary>
        </member>
        <member name="M:NETXP.Controls.ComboBoxEx.GetMRUKey(System.Boolean)">
            <summary>
            Gets the registry key where MRU URLs are stored
            </summary>
            <param name="writable">Indicates whether to get the key so that it values written to it</param>
            <returns>RegistryKey object for the MRU registry key or null if none exists</returns>
        </member>
        <member name="M:NETXP.Controls.ComboBoxEx.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.Items">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.ImageList">
            <summary>
            The image list used by the items.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.ImageIndex">
            <summary>
            The default image index.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.EnableMRU">
            <summary>
            Should enable MRU features?
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.Flags">
            <summary>
            Gets or sets the auto complete flags
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.MRUKey">
            <summary>
            Gets or sets the registry key name where the combo box maintains MRU list.
            </summary>
        </member>
        <member name="P:NETXP.Controls.ComboBoxEx.MRUHive">
            <summary>
            Gets or sets the registry key hive for the MRUKey property.
            </summary>
        </member>
        <member name="T:NETXP.Controls.DesktopAlert">
            <summary>
            Summary description for DesktopAlert.
            </summary>
        </member>
        <member name="M:NETXP.Controls.DesktopAlert.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a new DesktopAlert form.
            </summary>
            <param name="from">The sender of the email message.</param>
            <param name="subject">The subject of the email message.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:NETXP.Controls.DesktopAlert.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.DesktopAlert.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:NETXP.Controls.DesktopAlert.LinkClicked">
            <summary>
            Raised when the link is clicked.
            </summary>
        </member>
        <member name="E:NETXP.Controls.DesktopAlert.CloseClicked">
            <summary>
            Raised when the close button is clicked.
            </summary>
        </member>
        <member name="E:NETXP.Controls.DesktopAlert.TimedOut">
            <summary>
            Raised when the desktop alert has timed out.
            </summary>
        </member>
        <member name="P:NETXP.Controls.DesktopAlert.TimerDelay">
            <summary>
            Gets or sets the period of the timers. This affects how quickly the desktop alert fades in/out.
            </summary>
        </member>
        <member name="P:NETXP.Controls.DesktopAlert.TimeoutTicks">
            <summary>
            Gets or sets the number of timer ticks to wait for before starting the fade-out.
            </summary>
        </member>
        <member name="T:NETXP.Controls.DropDownTreeView">
            <summary>
            A drop-down tree view control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.DropDownTreeView.#ctor">
            <summary>
            Creates a new drop-down tree view.
            </summary>
        </member>
        <member name="M:NETXP.Controls.DropDownTreeView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="levent"></param>
        </member>
        <member name="M:NETXP.Controls.DropDownTreeView.TreeViewNodeSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.DropDownTreeView.ShowTreeView">
            <summary>
            Drops down the tree view.
            </summary>
        </member>
        <member name="M:NETXP.Controls.DropDownTreeView.HideTreeView">
            <summary>
            Closes the tree view.
            </summary>
        </member>
        <member name="M:NETXP.Controls.DropDownTreeView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.DropDownTreeView.TreeView">
            <summary>
            Gets the tree view associated with this control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.DropDownTreeView.TextBox">
            <summary>
            Gets the text box associated with this control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.DropDownTreeView.IdealTreeViewHeight">
            <summary>
            The ideal height of the tree view.
            </summary>
        </member>
        <member name="T:NETXP.Controls.ButtonEx">
            <summary>
            Extended button control with userpaint
            </summary>
        </member>
        <member name="T:NETXP.Controls.GraphType">
            <summary>
            The type of graph.
            </summary>
        </member>
        <member name="F:NETXP.Controls.GraphType.Bar">
            <summary>
            Graph is a bar graph.
            </summary>
        </member>
        <member name="F:NETXP.Controls.GraphType.Line">
            <summary>
            Graph is a line graph.
            </summary>
        </member>
        <member name="F:NETXP.Controls.GraphType.Pie">
            <summary>
            Graph is a pie chart.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Graph">
            <summary>
            This class implements a graph control.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Graph.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.#ctor">
            <summary>
            Constructs a graph with default options.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.PlotPoint(System.Double,System.Double)">
            <summary>
            Plots a point on a line graph.
            </summary>
            <param name="x">The x value of the point.</param>
            <param name="y">The y value of the point.</param>
        </member>
        <member name="M:NETXP.Controls.Graph.Clear">
            <summary>
            Clears the collection of graph items.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.BeginUpdate">
            <summary>
            Suspends all repainting until EndUpdate is called.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.EndUpdate">
            <summary>
            Refreshes the control and ends the update state.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Graph.SaveBitmap(System.String,System.Int32,System.Int32)">
            <summary>
            Exports the graph as a bitmap image. The file extension specifies the format.
            </summary>
            <param name="filename">The file name.<br></br>
            Formats supported include:
            <list type="bullet">
            <item>GIF - GIF format (256 colors)</item>
            <item>JPG - JPEG format (Standard compression)</item>
            <item>PNG - PNG format (Lossless compression)</item>
            <item>BMP - Bitmap Image for Windows (Standard)</item>
            <item>EMF - Enhanced MetaFile format</item>
            <item>ICO - Icon (Not sure what it'll look like though)</item>
            <item>TIF - TIFF format with standard compression</item>
            <item>WMF - Windows MetaFile format</item>
            <item>Any other extension default to Bitmap (BMP) format.</item>
            </list>
            </param>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
        </member>
        <member name="M:NETXP.Controls.Graph.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the graph.
            </summary>
            <param name="pe">Paint event args.</param>
        </member>
        <member name="M:NETXP.Controls.Graph.bgic_Changed(System.Object,System.EventArgs)">
            <summary>
            Occurs when the items have changed. The graph is redrawn.
            </summary>
            <param name="sender">The graph.</param>
            <param name="e">Event arguments (empty).</param>
        </member>
        <member name="P:NETXP.Controls.Graph.Type">
            <summary>
            The type of graph.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.Text">
            <summary>
            The graph's title.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.GraphItems">
            <summary>
            A collection of bars, points, or pie slices.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.LineThickness">
            <summary>
            The thickness of the line (on a line graph)
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.HeaderColor">
            <summary>
            The color of header texts (for axes)
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.HeaderFont">
            <summary>
            The font of the header text (graph title)
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.XAxisColor">
            <summary>
            The color of the actual X axis line.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.YAxisColor">
            <summary>
            The color of the actual Y axis line.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.XAxisLabel">
            <summary>
            The label of the X axis.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.YAxisLabel">
            <summary>
            The label of the Y axis.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.AxisLabelFont">
            <summary>
            The font of the labels of the axes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.Is3D">
            <summary>
            If the graph is a bar or pie chart, is the chart drawn in 3D semantics?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.LOBF">
            <summary>
            If the graph is a line graph, should it show the line of best fit?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.fMaxX">
            <summary>
            For a line graph, the maximum value of the X axis.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.fMaxY">
            <summary>
            For a line graph, the maximum value of the Y axis.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.fMinX">
            <summary>
            For a line graph, the minimum value of the X axis.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.fMinY">
            <summary>
            For a line graph, the minimum value of the Y axis.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.LineColor">
            <summary>
            The color of the line (in a line graph) connecting the points.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Graph.LOBFColor">
            <summary>
            The color of the line of best fit, in a line graph.
            </summary>
        </member>
        <member name="T:NETXP.Controls.GraphItemCollection">
            <summary>
            Collection
            </summary>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.#ctor">
            <summary>
            Not for public use.
            </summary>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.OnClearComplete">
            <summary>
            Not for public use.
            </summary>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Not for public use.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Not for public use.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Not for public use.
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.Add(NETXP.Controls.GraphItem)">
            <summary>
            Not for public use.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.RaiseChanged">
            <summary>
            Not for public use.
            </summary>
        </member>
        <member name="M:NETXP.Controls.GraphItemCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            Not for public use.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:NETXP.Controls.GraphItemCollection.Changed">
            <summary>
            Not for public use.
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItemCollection.Item(System.Int32)">
            <summary>
            Not for public use.
            </summary>
        </member>
        <member name="T:NETXP.Controls.GraphItem">
            <summary>
            GraphItem
            </summary>
        </member>
        <member name="M:NETXP.Controls.GraphItem.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Creates a graph item to store in the specified container.
            </summary>
            <param name="container">For designer support.</param>
        </member>
        <member name="M:NETXP.Controls.GraphItem.#ctor">
            <summary>
            Creates a graph item with the default options.
            </summary>
        </member>
        <member name="M:NETXP.Controls.GraphItem.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="E:NETXP.Controls.GraphItem.Changed">
            <summary>
            Raised when one or more of the item's properties changes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.AxisLabel">
            <summary>
            Label under the bar, or on the pie slice.
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.Value">
            <summary>
            Value (Bar) or degree (Pie)
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.ShowValueOnTop">
            <summary>
            For Bar and Pie charts, show actual value on the bar or pie.
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.GradientTop">
            <summary>
            Bar and pie graph only
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.GradientBottom">
            <summary>
            Bar and pie graph only
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.BarColor">
            <summary>
            Bar and pie graph only
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.X">
            <summary>
            Line graph only: X value of point.
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.Y">
            <summary>
            Line graph only: Y value of point.
            </summary>
        </member>
        <member name="P:NETXP.Controls.GraphItem.Tag">
            <summary>
            An object associated with this item.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Mask">
            <summary>
            Type of mask.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.None">
            <summary>
            No mask.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.DateOnly">
            <summary>
            Only allow dates.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.PhoneWithArea">
            <summary>
            Mask for phone number and area code.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.IpAddress">
            <summary>
            Mask for IP address.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.SSN">
            <summary>
            Mask for social security number.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.Decimal">
            <summary>
            Mask for a decimal number.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Mask.Digit">
            <summary>
            Mask for any digit.
            </summary>
        </member>
        <member name="T:NETXP.Controls.MaskedTextBox">
            <summary>
            A textbox that automatically provides a mask based on required input.
            </summary>
        </member>
        <member name="M:NETXP.Controls.MaskedTextBox.#ctor">
            <summary>
            Creates a masked textbox.
            </summary>
        </member>
        <member name="M:NETXP.Controls.MaskedTextBox.Dispose(System.Boolean)">
            <summary>
            Functio interna.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:NETXP.Controls.MaskedTextBox.Masked">
            <summary>
            Gets or sets the current mask.
            </summary>
        </member>
        <member name="T:NETXP.Controls.MultiPage">
            <summary>
            The MultiPage control is a tab control that does not show its tabs.
            It is used for the wizard form.
            </summary>
        </member>
        <member name="F:NETXP.Controls.MultiPage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NETXP.Controls.MultiPage.#ctor">
            <summary>
            Creates a MultiPage control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.MultiPage.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.MultiPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.MultiPage.OnHandleCreated(System.EventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.MultiPage.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Processes paint (in reality updates the size of the tabs so they seem to disappear.)
            </summary>
            <param name="pe">Not used.</param>
        </member>
        <member name="M:NETXP.Controls.MultiPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:NETXP.Controls.MultiPage.ShowTabs">
            <summary>
            Show tabs?
            </summary>
        </member>
        <member name="T:NETXP.Controls.RealPanel">
            <summary>
            A panel control that ACTUALLY inherits ContainerControl, unlike its Windows Forms cousin.
            </summary>
        </member>
        <member name="M:NETXP.Controls.RealPanel.#ctor">
            <summary>
            Empty constructor.
            </summary>
        </member>
        <member name="M:NETXP.Controls.RealPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:NETXP.Controls.RealPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NETXP.Controls.SkinnedPanel">
            <summary>
            SkinnedPanel is a panel that uses the XP tab page background.
            </summary>
        </member>
        <member name="M:NETXP.Controls.SkinnedPanel.#ctor">
            <summary>
            Constructs a new SkinnedPanel.
            </summary>
        </member>
        <member name="M:NETXP.Controls.SkinnedPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.SkinnedPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.SkinnedPanel.BackgroundImage">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.SkinnedPanel.BackColor">
            <summary>
            Hides an inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.SkinnedPanel.UseTheme">
            <summary>
            Determines whether or not the application is using XP themes.
            </summary>
        </member>
        <member name="T:NETXP.Controls.TreeViewEx">
            <summary>
            TreeViewEx is an extension to TreeView which automatically checks
            and unchecks child items.
            </summary>
        </member>
        <member name="F:NETXP.Controls.TreeViewEx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewEx.#ctor">
            <summary>
            Creates a new TreeViewEx control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewEx.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewEx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewEx.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.TreeViewEx.InitLayout">
            <summary>
            Functio interna.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewEx.OnCreateControl">
            <summary>
            Functio interna.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NETXP.Controls.TreeViewForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NETXP.Controls.ButtonState">
            <summary>
            The state of the button.
            </summary>
        </member>
        <member name="T:NETXP.Controls.XPCheckBox">
            <summary>
            XPCheckBox is a check box that draws itself using XP
            visual styles. It is meant to be used on SkinnedPanel controls
            where the normal .NET checkbox would not draw itself properly.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.#ctor">
            <summary>
            Constructs a new XPCheckBox.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Pinget illum controlum. Est una functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnTextChanged(System.EventArgs)">
            <summary>
            Determinat si textum habet cambiatum.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnFontChanged(System.EventArgs)">
            <summary>
            Determinat si fontum habet cambiatum.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determinat si soricis buttonum est pressus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determinat si soricis buttonum est pressus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determinat si soricis buttonum est pressus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPCheckBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.UseTheme">
            <summary>
            Determines whether or not the application is using XP themes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.FlatStyle">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.Image">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.ImageIndex">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.ImageList">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.ImageAlign">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.BackgroundImage">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.CheckAlign">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.TextAlign">
            <summary>
            Hides the inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.Mode">
            <summary>
            Internum.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPCheckBox.TextColor">
            <summary>
            The color of the checkbox text.
            </summary>
        </member>
        <member name="T:NETXP.Controls.XPGroupBox">
            <summary>
            The XPGroupBox control draws itself using XP visual styles.
            It is meant to be used with the SkinnedPanel control where
            the regular .NET GroupBox control would not draw itself
            properly.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPGroupBox.#ctor">
            <summary>
            Constructs a new XPGroupBox.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPGroupBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPGroupBox.OnTextChanged(System.EventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPGroupBox.OnFontChanged(System.EventArgs)">
            <summary>
            Functio interna.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.XPGroupBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Handles WM_THEMECHANGED event.
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:NETXP.Controls.XPGroupBox.UseTheme">
            <summary>
            Determines whether or not the application is using XP themes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPGroupBox.FlatStyle">
            <summary>
            Hides an inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPGroupBox.BackColor">
            <summary>
            Hides an inherited property.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPGroupBox.TextColor">
            <summary>
            The text color used for the header.
            </summary>
        </member>
        <member name="T:NETXP.Controls.XPictureBox">
            <summary>
            XPictureBox is an extended PictureBox control for faster display of pictures.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPictureBox.#ctor">
            <summary>
            Creates a new XPictureBox.
            </summary>
        </member>
        <member name="M:NETXP.Controls.XPictureBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="pe"></param>
        </member>
        <member name="P:NETXP.Controls.XPictureBox.AutoStretch">
            <summary>
            Stretch the image automatically based on DPI?
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPictureBox.Image">
            <summary>
            The image to be displayed.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPictureBox.ImageList">
            <summary>
            Image list for Image.
            </summary>
        </member>
        <member name="P:NETXP.Controls.XPictureBox.ImageIndex">
            <summary>
            Image index to use instead of Image.
            </summary>
        </member>
    </members>
</doc>
