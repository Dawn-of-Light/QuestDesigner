<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NETXP.Controls.Docking</name>
    </assembly>
    <members>
        <member name="T:NETXP.Controls.Docking.AutoHidePanel">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.#ctor(NETXP.Controls.Docking.DockingManager,System.Windows.Forms.DockStyle)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="dockEdge"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.ContainsDockObject(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.BringDockObjectIntoView(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.RestoreObjectForDockObject(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.AddDockObject(NETXP.Controls.Docking.DockObject,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection)">
            <summary>
            Internal.
            </summary>
            <param name="obj"></param>
            <param name="next"></param>
            <param name="previous"></param>
            <param name="nextAll"></param>
            <param name="previousAll"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.AddDockObjectIntoVerticalTab(NETXP.Controls.Docking.DockObject,NETXP.Controls.Docking.VerticalTab,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="obj"></param>
            <param name="ts"></param>
            <param name="index"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.AddDockObjectsAsGroup(NETXP.Controls.Docking.DockObjectCollection)">
            <summary>
            Internal.
            </summary>
            <param name="objects"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.AddDockObjectsAsGroup(NETXP.Controls.Docking.DockObjectCollection,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="objects"></param>
            <param name="index"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.InvertAutoHideWindowObjects(NETXP.Controls.Docking.WindowObjectsTabbed)">
            <summary>
            Internal.
            </summary>
            <param name="wot"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.RemoveDockObject(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.RemoveShowingWindow">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoHidePanel.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Internal.
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.AutoHidePanel.BackColor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.IResizeSource">
            <summary>
            Used by the docking manager internally.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.IResizeSource.CanResize(NETXP.Controls.Docking.SizeBar)">
            <summary>
            Internal.
            </summary>
            <param name="bar"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.IResizeSource.StartResizeOperation(NETXP.Controls.Docking.SizeBar,System.Drawing.Rectangle@)">
            <summary>
            Internal.
            </summary>
            <param name="bar"></param>
            <param name="screenBoundary"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.IResizeSource.EndResizeOperation(NETXP.Controls.Docking.SizeBar,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="bar"></param>
            <param name="delta"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.IResizeSource.SizeBarWidth">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.IResizeSource.Renderer">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.ButtonFunction">
            <summary>
            Describes the predefined function that the caption button performs.
            This determines the images that the caption button will use.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.Close">
            <summary>
            Uses a Close (X) image.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.Maximize">
            <summary>
            Uses a Maximize (square) image.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.Restore">
            <summary>
            Uses a Restore (two squares) image.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.AutoHide">
            <summary>
            Uses an auto-hide image (a vertical pin).
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.Pin">
            <summary>
            Uses a horizontal pin image.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.LeftArrow">
            <summary>
            Uses a left arrow image.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.RightArrow">
            <summary>
            Uses a right arrow image.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ButtonFunction.Minimize">
            <summary>
            Uses a minimize ( _ ) image.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.CaptionButton">
            <summary>
            This control is a button used in the captions of docked objects.
            Used internally.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.#ctor">
            <summary>
            Constructs a new CaptionButton.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.InitializeComponent">
            <summary>
            Constructs a new CaptionButton.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Internal event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Internal event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.CaptionButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.CaptionButton.Renderer">
            <summary>
            The renderer used by this control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.CaptionButton.Function">
            <summary>
            Gets or sets the function that this button will perform.
            This affects the image that the button will display.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.CaptionButton.PopupStyle">
            <summary>
            Should the button "pop up" when the mouse is over it?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.CaptionButton.Active">
            <summary>
            Is the button active?
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.State">
            <summary>
            The state of docked objects.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.State.Floating">
            <summary>
            Floating
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.State.DockTop">
            <summary>
            Docked Top
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.State.DockBottom">
            <summary>
            Docked Bottom
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.State.DockLeft">
            <summary>
            Docked Left
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.State.DockRight">
            <summary>
            Docked Right
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.IHotDockRegionSource">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.IHotDockRegionSource.AddHotDockRegions(NETXP.Controls.Docking.Redocker,NETXP.Controls.Docking.HotDockRegionCollection)">
            <summary>
            Internal.
            </summary>
            <param name="redock"></param>
            <param name="collection"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.IDockRegionMaximizeWindow">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockRegionMaximizeWindow.IsMaximizeAvailable">
            <summary>
            Internal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockRegionMaximizeWindow.IsWindowMaximized(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockRegionMaximizeWindow.MaximizeWindow(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockRegionMaximizeWindow.RestoreWindow">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.IDockRegionMaximizeWindow.Direction">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.IDockRegionMaximizeWindow.RefreshMaximize">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.ContextHandler">
            <summary>
            Signature of a delegate.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockFrame">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.WindowGotFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.WindowLostFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.NotifyRedockAllowed(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="redockAllowed"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.NotifyAutoHideImage(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="autoHidden"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.NotifyCloseButton(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.NotifyHideButton(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.NotifyShowCaptionBar(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.NotifyFullTitleText(System.String)">
            <summary>
            Internal.
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.ParentStateChanged(NETXP.Controls.Docking.State)">
            <summary>
            Internal.
            </summary>
            <param name="newState"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.RemovedFromParent(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.AddedToParent(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.OnGotFocus(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrame.OnLostFocus(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrame.Manager">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrame.ParentDockRegion">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrame.ParentWindow">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockFrameCaption">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.#ctor(NETXP.Controls.Docking.DockingManager,System.Drawing.Size,System.EventHandler,System.EventHandler,System.EventHandler,NETXP.Controls.Docking.ContextHandler)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="fixedSize"></param>
            <param name="closeHandler"></param>
            <param name="restoreHandler"></param>
            <param name="invertAutoHideHandler"></param>
            <param name="contextHandler"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnClose">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnInvertAutoHide">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnRestore">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnContext(System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="screenPos"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.Dispose(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.NotifyAutoHideImage(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="autoHidden"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.NotifyCloseButton(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.NotifyHideButton(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.NotifyShowCaptionBar(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.RecalculateMaximizeButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.AddMaximizeInterface(NETXP.Controls.Docking.IDockRegionMaximizeWindow)">
            <summary>
            Internal.
            </summary>
            <param name="zmw"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.RemoveMaximizeInterface">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnRefreshMaximize(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnButtonMax(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnButtonClose(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnButtonHide(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnButtonGotFocus(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnDoubleClick(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnResize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnAddMaximizeInterface">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.OnRemoveMaximizeInterface">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.UpdateMaximizeImage">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.UpdateAutoHideImage">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.RecalculateButtons">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.CreateButtons">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaption.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Internal.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="E:NETXP.Controls.Docking.DockFrameCaption.Close">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockFrameCaption.Restore">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockFrameCaption.InvertAutoHide">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockFrameCaption.Context">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.MaxButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.CloseButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.HideButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.Redocker">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.MaxInterface">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.ShowCloseButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.ShowHideButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.IgnoreHideButton">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.PinnedImage">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCaption.ParentDockRegion">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockFrameCaptionRendered">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.#ctor(NETXP.Controls.Docking.DockingManager,System.EventHandler,System.EventHandler,System.EventHandler,NETXP.Controls.Docking.ContextHandler)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="closeHandler"></param>
            <param name="restoreHandler"></param>
            <param name="invertAutoHideHandler"></param>
            <param name="contextHandler"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.WindowGotFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.WindowLostFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.NotifyFullTitleText(System.String)">
            <summary>
            Internal.
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.ParentStateChanged(NETXP.Controls.Docking.State)">
            <summary>
            Internal.
            </summary>
            <param name="newState"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.RemovedFromParent(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.AddedToParent(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.OnAddMaximizeInterface">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.UpdateAutoHideImage">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.UpdateMaximizeImage">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.RecalculateButtons">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.CreateButtons">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCaptionRendered.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal and unused!
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.DockFrameCollection">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCollection.Add(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCollection.AddRange(NETXP.Controls.Docking.DockFrame[])">
            <summary>
            Internal.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCollection.Remove(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCollection.Insert(System.Int32,NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCollection.Contains(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockFrameCollection.IndexOf(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.DockFrameCollection.Item(System.Int32)">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.UpdateName">
            <summary>
            Properties to propagate.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.UpdateName.SizeBarWidth">
            <summary>
            The resize bar vector.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.UpdateName.DockRegionMinMax">
            <summary>
            DockRegion min/max?
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.UpdateName.Renderer">
            <summary>
            The renderer.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.UpdateName.CaptionFont">
            <summary>
            The font of the DockFrameCaption.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockObjectHandler">
            <summary>
            Handles events for an object.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockObjectHidingHandler">
            <summary>
            Handles events for an object when hiding.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.ContextMenuHandler">
            <summary>
            Context menu is about to be shown.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabControlCreatedHandler">
            <summary>
            A tab control has been created.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.SaveCustomConfigHandler">
            <summary>
            Custom configuration about to be saved.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.LoadCustomConfigHandler">
            <summary>
            Custom configuration about to be loaded.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockingManager">
            <summary>
            A full-featured VS.NET-style docking manager.
            
            An instance of the DockingManager class needs to be
            created and associated with each ContainerControl-derived object
            you want to have a docking capability. Most of the time this will be your
            application's top-level Form. 
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.#ctor(System.Windows.Forms.ContainerControl,NETXP.Controls.Docking.IDockingRenderer)">
            <summary>
            Creates a docking manager with a container and renderer.
            </summary>
            <param name="container">The container to use.</param>
            <param name="renderer">The renderer to use to draw the docked objects.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.InitializeControl">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.UpdateInnerFill">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.ToggleDockObjectAutoHide(NETXP.Controls.Docking.DockObject)">
            <summary>
            Toggles the auto-hide state of an object.
            </summary>
            <param name="c">The object.</param>
            <returns>True if successful. False if failed.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.ShowDockObject(NETXP.Controls.Docking.DockObject)">
            <summary>
            If the provided object is hidden then it will be restored to become visible.
            </summary>
            <param name="c">DockObject to be shown.</param>
            <returns>True if successful. False if failed.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.ShowAllDockObjects">
            <summary>
            Show all objects.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.HideDockObject(NETXP.Controls.Docking.DockObject)">
            <summary>
            If the provided object is visible then it will become hidden.
            </summary>
            <param name="c">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.HideDockObject(NETXP.Controls.Docking.DockObject,System.Boolean,System.Boolean)">
            <summary>
            Provides greater control over actions taken when a DockObject becomes hidden.
            This is provided for internal use by the docking windows framework code.
            </summary>
            <param name="c">The object.</param>
            <param name="record">If record is set then it will record the current DockObject position before hiding window.</param>
            <param name="reorder">If reorder is set then it will move the DockObject to the end of the DockObjects collection.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.HideAllDockObjects">
            <summary>
            Hides all objects.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.CreateWindowForDockObject(NETXP.Controls.Docking.DockObject)">
            <summary>
            Used to create an appropriately configured Window object for the given DockObject object.
            Currently this ensures the caption bar matches the requested style specified in the constructor.
            </summary>
            <param name="c">The object.</param>
            <returns>The window to use for the object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.CreateWindowForDockObject(NETXP.Controls.Docking.DockObject,System.EventHandler,System.EventHandler,System.EventHandler,NETXP.Controls.Docking.ContextHandler)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
            <param name="objClose"></param>
            <param name="restore"></param>
            <param name="invertAutoHide"></param>
            <param name="showContextMenu"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.CreateDockRegionForDockObject(NETXP.Controls.Docking.State)">
            <summary>
            Creates an appropriate DockRegion object and adds it to the managed control.
            </summary>
            <param name="regionState">The state of the region.</param>
            <returns>The region.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.AddDockObjectWithState(NETXP.Controls.Docking.DockObject,NETXP.Controls.Docking.State)">
            <summary>
            Will create an appropriate Window for hosting the provided
            DockObject and place inside a new DockRegion which is placed according to the State given.
            </summary>
            <param name="c">The object.</param>
            <param name="newState">The state.</param>
            <returns>The window.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.AddDockObjectToWindowObjects(NETXP.Controls.Docking.DockObject,NETXP.Controls.Docking.WindowObjects)">
            <summary>
            If you already have a reference to a WindowObjects object then this method
            will add the provided DockObject into that object.
            </summary>
            <param name="c">The object.</param>
            <param name="wc">The WindowObjects object.</param>
            <returns>The WindowObjects object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.AddDockObjectToDockRegion(NETXP.Controls.Docking.DockObject,NETXP.Controls.Docking.DockRegion,System.Int32)">
            <summary>
            If you already have a reference to a DockRegion object then this will
            create a new Window to host the provided DockObject and then add
            the Window to the given relative position inside the DockRegion.
            </summary>
            <param name="c">The object.</param>
            <param name="z">The region.</param>
            <param name="index">The index.</param>
            <returns>The window.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.InnerResizeRectangle(System.Windows.Forms.Control)">
            <summary>
            Internal.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.ReorderDockRegionToInnerMost(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Repositions the given reference within the list of Form
            controls to the innermost valid point.
            </summary>
            <param name="region">The region.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.ReorderDockRegionToOuterMost(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Repositions the given reference within the list of Form
            controls to the outermost valid point.
            </summary>
            <param name="region">The region.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OuterControlIndex">
            <summary>
            Internal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.RemoveShowingAutoHideWindows">
            <summary>
            If any of the AutoHide windows is currently being shown,
            this will remove it from display immediately.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.BringAutoHideIntoView(NETXP.Controls.Docking.DockObject)">
            <summary>
            If the given object instance is in the AutoHide mode
            then it will be selected and slide out into view.
            </summary>
            <param name="c">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.ValuesFromState(NETXP.Controls.Docking.State,System.Windows.Forms.DockStyle@,NETXP.Library.Direction@)">
            <summary>
            Internal.
            </summary>
            <param name="newState"></param>
            <param name="dockState"></param>
            <param name="direction"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.SaveConfigToArray">
            <summary>
            Saves layout information into an array of bytes using Encoding.Unicode.
            </summary>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.SaveConfigToArray(System.Text.Encoding)">
            <summary>
            Saves layout information into an array of bytes using specified encoding.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.SaveConfigToFile(System.String)">
            <summary>
            Saves layout information into a named file using Encoding.Unicode.
            </summary>
            <param name="filename">The file.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.SaveConfigToFile(System.String,System.Text.Encoding)">
            <summary>
            Saves layout information into a named file using specified encoding.
            </summary>
            <param name="filename">The file.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.SaveConfigToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves layout information into a stream object using specified encoding.
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.LoadConfigFromArray(System.Byte[])">
            <summary>
            Loads layout information from given array of bytes.
            </summary>
            <param name="buffer">The byte array.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.LoadConfigFromFile(System.String)">
            <summary>
            Loads layout information from given file.
            </summary>
            <param name="filename">The file.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.LoadConfigFromStream(System.IO.Stream)">
            <summary>
            Loads layout information from given stream object.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnDockObjectHiding(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnDockObjectHidden(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnDockObjectShown(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnTabControlCreated(NETXP.Controls.Docking.TabControl)">
            <summary>
            Internal.
            </summary>
            <param name="tabControl"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnSaveCustomConfig(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnLoadCustomConfig(System.Xml.XmlTextReader)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManager.OnShowContextMenu(System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="screenPos"></param>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.DockObjectShown">
            <summary>
            DockObject shown.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.DockObjectHidden">
            <summary>
            DockObject hidden.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.DockObjectHiding">
            <summary>
            DockObject hiding.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.ContextMenu">
            <summary>
            Context menu about to be shown.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.TabControlCreated">
            <summary>
            A tab control was created.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.SaveCustomConfig">
            <summary>
            Custom configuration about to be saved.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManager.LoadCustomConfig">
            <summary>
            Custom configuration about to be loaded.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.DockContainer">
            <summary>
            The container.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.InnerControl">
            <summary>
            The inner-most control.
            The InnerControl property needs to be set to
            the last control in the Forms.Control collection that represents
            the group of controls that the manager must not dock after.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.OuterControl">
            <summary>
            The outer-most control.
            The OuterControl property needs to be set to
            the first control in the Forms.Control collection that represents
            the group of controls that the manager must not dock between.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.DockObjects">
            <summary>
            A collection of objects associated with this dock manager.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.Renderer">
            <summary>
            The renderer used to draw the docked objects.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.Locked">
            <summary>
            Is this docking manager locked?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.DockRegionMinMax">
            <summary>
            If more than one Window is docked in the same
            column/row, should they have a maximize capability?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.InnerFill">
            <summary>
            When set to True, the innermost docking window
            will assume the Fill docking style so that you can
            create applications whose client area consists only of docking windows.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.AutoResize">
            <summary>
            When set to True,
            a resizing of the control will cause the
            docking windows to be resized smaller if they would start
            overlapping. Note that the windows
            will not be sized bigger again when the control is increased in size.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.InnerMinimum">
            <summary>
            Defines the minimum size of the inner control,
            if resizing the application would cause the inner control
            to become smaller than this then the docking windows are resized smaller instead.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManager.SizeBarWidth">
            <summary>
            Defines the width/height of resize bars used between docking windows.
            A value of -1 will cause the appropriate default value for the visual style
            to be used instead.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockingManagerExtender">
            <summary>
            DockingManagerExtender enhances the DockingManager for design time.
            It extends the controls on your form with properties, which defines the docking behaviour at run time.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.dockingManager">
            <summary>Docking Manager which handles docking objects.</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.dockDockObjects">
            <summary>List that contains the docked object data for each control that is docked enabled.</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.autoPersistent">
            <summary>Indicates if auto persistent feature is enabled</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.attachedControls">
            <summary>Distinct Flag, cause the attach process must run only once.</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.components">
            <summary>Needed by the VS Designer</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.containerControl">
            <summary>The object to which the docking manager instance is attached</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockingManagerExtender.resetIsolatedStoreage">
            <summary>Flag used to disable save on closed event.</summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Internal.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.CommonConstructor">
            <summary>
            Used for common initialization.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetMinimumSize(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Sets the minimum size property.
            </summary>
            <param name="control"></param>
            <param name="size"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetMinimumSize(System.Windows.Forms.Control)">
            <summary>
            Gets the minimum size property.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetHideButton(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the hide button property.
            </summary>
            <param name="control"></param>
            <param name="enable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetHideButton(System.Windows.Forms.Control)">
            <summary>
            Gets the hide button property.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetCaptionBar(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the caption bar property.
            </summary>
            <param name="control"></param>
            <param name="enable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetCaptionBar(System.Windows.Forms.Control)">
            <summary>
            Gets the caption bar property.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetDockingStyle(System.Windows.Forms.Control,System.Windows.Forms.DockStyle)">
            <summary>
            Sets the dock style for the control.
            </summary>
            <param name="control"></param>
            <param name="dockState"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetDockingStyle(System.Windows.Forms.Control)">
            <summary>
            Gets the dock style for the control.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetAllowDocking(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Enables and disabled the docking for the control.
            </summary>
            <param name="control"></param>
            <param name="enable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetAllowDocking(System.Windows.Forms.Control)">
            <summary>
            Gets if control is in dock mode.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetTabbedMode(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the mode for tabbed docking.
            </summary>
            <param name="control"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetTabbedMode(System.Windows.Forms.Control)">
            <summary>
            Gets the mode for tabbed docking.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetCloseButton(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Enable and disables the close button of the docking window.
            </summary>
            <param name="control"></param>
            <param name="enable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetCloseButton(System.Windows.Forms.Control)">
            <summary>
            Gets the enable and disable state of the close button for this docking window.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetTitle(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the text displayed in tabbed/hide mode.
            </summary>
            <param name="control"></param>
            <param name="title"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetTitle(System.Windows.Forms.Control)">
            <summary>
            Gets the text displayed in tabbed/hide mode.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetFullTitle(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the text displayed in docking control title. 
            </summary>
            <param name="control"></param>
            <param name="title"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetFullTitle(System.Windows.Forms.Control)">
            <summary>
            Gets the text displayed in docking control title.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetCloseOnHide(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the close-on-hide property.
            </summary>
            <param name="control"></param>
            <param name="enable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetCloseOnHide(System.Windows.Forms.Control)">
            <summary>
            Gets the close-on-hide property.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SetIcon(System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            Sets the icon displayed in tabbed/hide mode.
            </summary>
            <param name="control"></param>
            <param name="icon"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetIcon(System.Windows.Forms.Control)">
            <summary>
            Gets the icon displayed in tabbed/hide mode.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.ResetAutoPersistent(System.Boolean)">
            <summary>
            Reset Automatic State Persistence
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.LoadConfigFromStream(System.IO.Stream)">
            <summary>
            Restores the docking configuration.
            </summary>
            <param name="stream">Valid stream</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.SaveConfigToStream(System.IO.Stream)">
            <summary>
            Stores the docking configuration.
            </summary>
            <param name="stream">Valid stream</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.GetDockDockObject(System.Windows.Forms.Control)">
            <summary>
            Utility method to get ExDockObject via Control.
            </summary>
            <param name="control">Control for which the dockingDockObject should be returned.</param>
            <returns>ExDockObject for the control</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.AttachControls">
            <summary>
            Handles the ExDockObjects settings and attach the controls at runtime.
            This method handles all the dirty work.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the objects of this method with the code editor.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockingManagerExtender.CanExtend(System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="extendee"></param>
            <returns></returns>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManagerExtender.Loading">
            <summary>
            The docking manager extender is loading.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManagerExtender.Loaded">
            <summary>
            The docking manager extender has finished loading.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManagerExtender.Closing">
            <summary>
            The docking manager extender is closing.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockingManagerExtender.Closed">
            <summary>
            The docking manager extender has finished closing.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManagerExtender.DockingManager">
            <summary>
            The wrapped DockingManager. Direct access to all properties.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManagerExtender.ContainerControl">
            <summary>
            Gets or sets the object to which the docking manager instance is attached
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManagerExtender.InnerControl">
            <summary>
            Sets or gets the Control for which the docking windows will not be allowed to dock inside of the specified control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManagerExtender.OuterControl">
            <summary>
            Sets or gets the Control for which docking windows will not be allowed to dock outside of the specified control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockingManagerExtender.AutomaticStatePersistence">
            <summary>
            Enable or disable the Automatic State Persistence feature. If enabled the customized docking settings made by the user are persistent by User/Domain/WorkingArea
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.ExDockObject">
            <summary>
            Wraps DockObject and extend it with needed properties.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockObject">
            <summary>
            A docking object.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.#ctor(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Constructs a new docking object. Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Constructs a new object for the specified dock manager.
            </summary>
            <param name="manager">The dock manager.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.#ctor(NETXP.Controls.Docking.DockingManager,System.Windows.Forms.Control)">
            <summary>
            Constructs a new object for the specified dock manager
            and assigns it the specified control.
            </summary>
            <param name="manager">The dock manager.</param>
            <param name="control">The control.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.#ctor(NETXP.Controls.Docking.DockingManager,System.Windows.Forms.Control,System.String)">
            <summary>
            Constructs a new object for the specified dock manager,
            assigns it the specified control, and gives it the
            specified title.
            </summary>
            <param name="manager">The cock manager.</param>
            <param name="control">The control.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.#ctor(NETXP.Controls.Docking.DockingManager,System.Windows.Forms.Control,System.String,System.Drawing.Image)">
            <summary>
            Constructs a new object for the specified dock manager,
            assigns it the specified control and title, and gives it
            the specified icon.
            </summary>
            <param name="manager">The dock manager.</param>
            <param name="control">The control.</param>
            <param name="title">The title.</param>
            <param name="icon">The icon.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.UpdateVisibility">
            <summary>
            Updates the object's visibility.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.OnPropertyChanging(NETXP.Controls.Docking.DockObject.Property)">
            <summary>
            Internal.
            </summary>
            <param name="prop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.OnPropertyChanged(NETXP.Controls.Docking.DockObject.Property)">
            <summary>
            Internal.
            </summary>
            <param name="prop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.BringToFront">
            <summary>
            Brings the object to front.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.RecordRestore">
            <summary>
            Records a restore object.
            </summary>
            <returns>The restore object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.RecordAutoHideRestore">
            <summary>
            Records a restore object.
            </summary>
            <returns>The restore object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.RecordDockingRestore">
            <summary>
            Records a restore object.
            </summary>
            <returns>The restore object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObject.RecordFloatingRestore">
            <summary>
            Records a restore object.
            </summary>
            <returns>The restore object.</returns>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DefaultDisplaySize">
            <summary>
            The default size for docked objects.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DefaultAutoHideSize">
            <summary>
            The default size for auto-hidden objects.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DefaultFloatingSize">
            <summary>
            The default size for floating objects.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DefaultDisplayLocation">
            <summary>
            The default location for floating objects.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockObject.PropertyChanging">
            <summary>
            A property is changing.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.DockObject.PropertyChanged">
            <summary>
            A property has changed.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DockingManager">
            <summary>
            Gets/sets the docking manager used by this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Control">
            <summary>
            Gets/sets the control assigned to this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Title">
            <summary>
            Gets/sets the title assigned to this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.FullTitle">
            <summary>
            Gets/sets the full title assigned to this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Icon">
            <summary>
            Gets/sets the icon assigned to this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.CaptionBar">
            <summary>
            Should the object have a caption bar?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.CloseButton">
            <summary>
            Should the object have a close button?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.HideButton">
            <summary>
            Should the object have an auto-hide button?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.MinimumSize">
            <summary>
            The minimum size of this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DisplaySize">
            <summary>
            Gets/sets the display size of the object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.AutoHideSize">
            <summary>
            Gets/sets the auto hide size of the object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.FloatingSize">
            <summary>
            Gets/sets the floating size of the object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DisplayLocation">
            <summary>
            Gets/sets the location of the object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Order">
            <summary>
            Gets the order of the object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.CloseOnHide">
            <summary>
            Should the object be closed when auto-hidden?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Tag">
            <summary>
            An object associated with this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Visible">
            <summary>
            Is this object visible?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DefaultRestore">
            <summary>
            The default restore object for this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.AutoHideRestore">
            <summary>
            The auto-hide restore object for this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.DockingRestore">
            <summary>
            The docking restore object for this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.FloatingRestore">
            <summary>
            The floating restore object for this object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.Docked">
            <summary>
            Gets/sets if the object is docked.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.ParentWindowObjects">
            <summary>
            Gets/sets the parent window object.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.AutoHidePanel">
            <summary>
            Gets/sets the auto-hide panel, if any.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObject.AutoHidden">
            <summary>
            Gets/sets if the object is auto-hidden.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockObject.Property">
            <summary>
            Enumeration of property change events.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.Control">
            <summary>
            The Control property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.Title">
            <summary>
            The Title property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.FullTitle">
            <summary>
            The FullTitle property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.Icon">
            <summary>
            The Icon property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.CaptionBar">
            <summary>
            The CaptionBar property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.CloseButton">
            <summary>
            The CloseButton property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.HideButton">
            <summary>
            The HideButton property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.DisplaySize">
            <summary>
            The DisplaySize property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.AutoHideSize">
            <summary>
            The AutoHideSize property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.FloatingSize">
            <summary>
            The FloatingSize property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.DisplayLocation">
            <summary>
            The DisplayLocation property of the object.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.DockObject.Property.AutoHidden">
            <summary>
            The AutoHidden property of the object.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockObject.PropChangeHandler">
            <summary>
            The property change event signature.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ExDockObject.tabbedMode">
            <summary>Specify if this docking Control permit tabbed Docking</summary>
        </member>
        <member name="F:NETXP.Controls.Docking.ExDockObject.dockStyle">
            <summary>Specify DockStyle used for docking</summary>
        </member>
        <member name="M:NETXP.Controls.Docking.ExDockObject.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Constructs a new docking object.
            </summary>
            <param name="dockingManager">The docking manager.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.ExDockObject.#ctor(NETXP.Controls.Docking.DockingManager,System.Windows.Forms.Control)">
            <summary>
            Constructs a new docking object.
            </summary>
            <param name="dockingManager">The docking manager.</param>
            <param name="control">The control.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.ExDockObject.DockState">
            <summary>
            Gets the State evaluated from System.Windows.Forms.DockStyle.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.ExDockObject.DockStyle">
            <summary>
            Gets or sets the DockStyle.
            </summary>		
        </member>
        <member name="P:NETXP.Controls.Docking.ExDockObject.TabbedMode">
            <summary>
            Enable or disable the tabbed docking mode.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockObjectCollection">
            <summary>
            A collection of DockObject objects.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Add(NETXP.Controls.Docking.DockObject)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The object to add.</param>
            <returns>The index of the object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.AddRange(NETXP.Controls.Docking.DockObject[])">
            <summary>
            Adds a bunch of objects.
            </summary>
            <param name="values">The objects.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Remove(NETXP.Controls.Docking.DockObject)">
            <summary>
            Removes a object.
            </summary>
            <param name="value">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Insert(System.Int32,NETXP.Controls.Docking.DockObject)">
            <summary>
            Inserts a object at specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="value">DockObject.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Contains(NETXP.Controls.Docking.DockObject)">
            <summary>
            Does the list contain the specified object?
            </summary>
            <param name="value">The object.</param>
            <returns>True if the list contains the object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Contains(NETXP.Controls.Docking.DockObjectCollection)">
            <summary>
            Does the list contain any of a bunch of objects?
            </summary>
            <param name="values">The objects.</param>
            <returns>True if at least one of the objects in the values collection
            is contained in this collection.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Contains(System.String)">
            <summary>
            Does the list contain a object whose title matches the specified title?
            </summary>
            <param name="value">The title to match.</param>
            <returns>True if the list contains a object whose title matches the specified title.
            </returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Contains(NETXP.Library.StringCollection)">
            <summary>
            Does the list contain a object whose title matches any of the specified titles?
            </summary>
            <param name="values">The titles to look for.</param>
            <returns>True if at least one of the titles was matched.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.IndexOf(NETXP.Controls.Docking.DockObject)">
            <summary>
            Gets the index of a object.
            </summary>
            <param name="value">The object.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockObjectCollection.Copy">
            <summary>
            Creates a copy of this collection.
            </summary>
            <returns>A clone of this collection.</returns>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObjectCollection.Item(System.Int32)">
            <summary>
            Gets a object at the specified index.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockObjectCollection.Item(System.String)">
            <summary>
            Gets a object with the specified title.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockRegion">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.#ctor(NETXP.Controls.Docking.DockingManager,NETXP.Controls.Docking.State)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="state"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.InitializeComponent(NETXP.Controls.Docking.DockingManager,NETXP.Controls.Docking.State)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="state"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.RecordRestore(NETXP.Controls.Docking.Window,System.Object,NETXP.Controls.Docking.Restore)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
            <param name="child"></param>
            <param name="childRestore"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.OnWindowsClearing">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.OnWindowInserted(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.OnWindowRemoving(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegion.OnWindowRemoved(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegion.State">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegion.AutoDispose">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegion.DockingManager">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegion.Windows">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegion.MinimumWidth">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegion.MinimumHeight">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockRegionCollection">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionCollection.Add(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionCollection.AddRange(NETXP.Controls.Docking.DockRegion[])">
            <summary>
            Internal.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionCollection.Remove(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionCollection.Insert(System.Int32,NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionCollection.Contains(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionCollection.IndexOf(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionCollection.Item(System.Int32)">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.DockRegionSequence">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.#ctor(NETXP.Controls.Docking.DockingManager,NETXP.Controls.Docking.State,NETXP.Controls.Docking.IDockingRenderer,NETXP.Library.Direction,System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="state"></param>
            <param name="renderer"></param>
            <param name="direction"></param>
            <param name="regionMinMax"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.SuppressReposition">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.IsMaximizeAvailable">
            <summary>
            Internal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.IsWindowMaximized(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.MaximizeWindow(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.RestoreWindow">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.OnRefreshMaximize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.CanResize(NETXP.Controls.Docking.SizeBar)">
            <summary>
            Internal.
            </summary>
            <param name="bar"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.StartResizeOperation(NETXP.Controls.Docking.SizeBar,System.Drawing.Rectangle@)">
            <summary>
            Internal.
            </summary>
            <param name="bar"></param>
            <param name="screenBoundary"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.EndResizeOperation(NETXP.Controls.Docking.SizeBar,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="bar"></param>
            <param name="delta"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.RecordRestore(NETXP.Controls.Docking.Window,System.Object,NETXP.Controls.Docking.Restore)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
            <param name="child"></param>
            <param name="childRestore"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.AddHotDockRegions(NETXP.Controls.Docking.Redocker,NETXP.Controls.Docking.HotDockRegionCollection)">
            <summary>
            Internal.
            </summary>
            <param name="redock"></param>
            <param name="collection"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.ModifyWindowSpace(NETXP.Controls.Docking.Window,System.Decimal)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
            <param name="newSpace"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.OnWindowsClearing">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.OnWindowInserted(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.OnWindowRemoving(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.OnWindowRemoved(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.DockRegionSequence.OnResize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:NETXP.Controls.Docking.DockRegionSequence.RefreshMaximize">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.MinimumWidth">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.MinimumHeight">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.Dock">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.Direction">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.State">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.SizeBarWidth">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.DockRegionSequence.Renderer">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.FloatingForm">
            <summary>
            A generic floating form.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.#ctor(NETXP.Controls.Docking.DockingManager,NETXP.Controls.Docking.DockRegion,NETXP.Controls.Docking.ContextHandler)">
            <summary>
            Internal.
            </summary>
            <param name="dockingManager"></param>
            <param name="region"></param>
            <param name="contextHandler"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.AddHotDockRegions(NETXP.Controls.Docking.Redocker,NETXP.Controls.Docking.HotDockRegionCollection)">
            <summary>
            Internal.
            </summary>
            <param name="redock"></param>
            <param name="collection"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.OnContext(System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="screenPos"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.ExitFloating">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.OnMove(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.OnSizeChanged(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.OnResize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Internal.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.FloatingForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Internal.
            </summary>
            <param name="m"></param>
        </member>
        <member name="E:NETXP.Controls.Docking.FloatingForm.Context">
            <summary>
            Context menu is being shown.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.FloatingForm.CreateParams">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.FloatingForm.DockingManager">
            <summary>
            The docking manager responsible for this form.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.FloatingForm.DockRegion">
            <summary>
            The region.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.HotDockRegion">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegion.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Internal.
            </summary>
            <param name="hotArea"></param>
            <param name="newSize"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegion.ApplyChange(System.Drawing.Point,NETXP.Controls.Docking.Redocker)">
            <summary>
            Internal.
            </summary>
            <param name="screenPos"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegion.UpdateForMousePosition(System.Drawing.Point,NETXP.Controls.Docking.Redocker)">
            <summary>
            Internal.
            </summary>
            <param name="screenPos"></param>
            <param name="parent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegion.DrawIndicator(System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="mousePos"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegion.RemoveIndicator(System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="mousePos"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegion.DrawReversible(System.Drawing.Rectangle)">
            <summary>
            Internal.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.HotDockRegion.HotArea">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.HotDockRegion.NewSize">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.HotDockRegion.DragWidth">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.HotDockRegionCollection">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.Add(NETXP.Controls.Docking.HotDockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.AddRange(NETXP.Controls.Docking.HotDockRegion[])">
            <summary>
            Internal.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.Remove(NETXP.Controls.Docking.HotDockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.Insert(System.Int32,NETXP.Controls.Docking.HotDockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.Contains(NETXP.Controls.Docking.HotDockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.IndexOf(NETXP.Controls.Docking.HotDockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.HotDockRegionCollection.Contains(System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.HotDockRegionCollection.Item(System.Int32)">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.ManagerDockObjectCollection">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Add">
            <summary>
            Internal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Add(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Add(System.Windows.Forms.Control)">
            <summary>
            Internal.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Add(System.Windows.Forms.Control,System.String)">
            <summary>
            Internal.
            </summary>
            <param name="control"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Add(System.Windows.Forms.Control,System.String,System.Drawing.Image)">
            <summary>
            Internal.
            </summary>
            <param name="control"></param>
            <param name="title"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Remove(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Contains(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.SetIndex(System.Int32,NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="newIndex"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.IndexOf(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.ManagerDockObjectCollection.Copy">
            <summary>
            Internal.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.ManagerDockObjectCollection.Item(System.Int32)">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.ManagerDockObjectCollection.Item(System.String)">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Redocker">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Redocker.m_tracking">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Redocker.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Redocker.EnterTrackingMode">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Redocker.ExitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.Redocker.QuitTrackingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Redocker.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Redocker.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.Redocker.Tracking">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Renderers">
            <summary>
            Provides renderers for Windows Default, Office XP, and Office 2003 styles.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Renderers.OfficeXP">
            <summary>
            Office XP / VS.NET IDE style.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.IDockingRenderer">
            <summary>
            Defines a renderer for the docking subsystem.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.PaintCaption(System.Drawing.Graphics,NETXP.Controls.Docking.DockFrameCaption,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Paints a window detail caption.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="item">The caption.</param>
            <param name="rectCaption">The bounds rectangle.</param>
            <param name="focused">Is the caption active?</param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.PaintCaptionButton(System.Drawing.Graphics,NETXP.Controls.Docking.CaptionButton,System.Boolean,NETXP.Controls.Docking.ButtonFunction,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Paints a caption button.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="item">The caption button.</param>
            <param name="active">Is the caption active?</param>
            <param name="function">The button's designation.</param>
            <param name="mouseOver">Is the button hovering?</param>
            <param name="mouseCapture">Is the button pressed?</param>
            <param name="popupStyle">Is it a popup-style button?</param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.PaintSizeBar(System.Drawing.Graphics,NETXP.Controls.Docking.SizeBar,System.Windows.Forms.DockStyle)">
            <summary>
            Paints a resize bar.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="item">The resize bar.</param>
            <param name="dock">The dock style.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.GetTabPageSpace(System.Drawing.Graphics,NETXP.Controls.Docking.TabPage,System.Boolean,System.Int32,NETXP.Controls.Docking.TabControl,System.Boolean)">
            <summary>
            Gets tab page space.
            </summary>
            <param name="g"></param>
            <param name="page"></param>
            <param name="selectedTextOnly"></param>
            <param name="pageSelected"></param>
            <param name="ctl"></param>
            <param name="boldSelected"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.RecalculateMultilineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,NETXP.Controls.Docking.TabPosition,System.Int32@,System.Int32@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Boolean,System.Int32,System.Boolean,System.Collections.ArrayList@,System.Boolean,System.Boolean)">
            <summary>
            Recalculates multiline tabs.
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xEndPos"></param>
            <param name="tabPosition"></param>
            <param name="tabButtonHeight"></param>
            <param name="appearance"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="tabsAreaRect"></param>
            <param name="pageAreaRect"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="multilineFullWidth"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.RecalculateSinglelineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32@,System.Int32@,System.Boolean,System.Int32,System.Collections.ArrayList@,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Recalculates single line tabs.
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xWidth"></param>
            <param name="tabPosition"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
            <param name="startPage"></param>
            <param name="shrinkPagesToFit"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.FillTabBackgrounds(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,NETXP.Controls.Docking.TabPosition)">
            <summary>
            Fills tab backgrounds.
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="pageAreaRect"></param>
            <param name="tabsAreaRect"></param>
            <param name="appearance"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.DrawTabBorders(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws tab borders.
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="positionAtTop"></param>
            <param name="tabsAreaRect"></param>
            <param name="pixelBorder"></param>
            <param name="pixelArea"></param>
            <param name="hiddenPages"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.DrawTab(NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabPage,System.Drawing.Graphics,System.Boolean,System.Collections.ArrayList,System.Int32,System.Boolean,System.Boolean,System.Boolean,NETXP.Controls.Docking.TabPosition,System.Boolean,System.Boolean)">
            <summary>
            Draws a tab.
            </summary>
            <param name="ctl"></param>
            <param name="page"></param>
            <param name="g"></param>
            <param name="highlightText"></param>
            <param name="tabRects"></param>
            <param name="imageGapTopExtra"></param>
            <param name="selectedTextOnly"></param>
            <param name="dimUnselected"></param>
            <param name="boldSelected"></param>
            <param name="appearance"></param>
            <param name="multiline"></param>
            <param name="positionAtTop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.DrawAutoHidePanel(NETXP.Controls.Docking.AutoHidePanel,System.Drawing.Graphics)">
            <summary>
            Draws an auto-hide panel.
            </summary>
            <param name="item">The panel.</param>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.DrawVerticalTabOutline(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,System.Boolean,NETXP.Library.Edge)">
            <summary>
            Draws a tab stub outline.
            </summary>
            <param name="item">The tab stub.</param>
            <param name="g">The graphics object.</param>
            <param name="pre"></param>
            <param name="edge">The edge.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.FillVerticalTabBackground(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics)">
            <summary>
            Fills a tab stub background.
            </summary>
            <param name="item">The tab stub.</param>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.IDockingRenderer.DrawVerticalTabBorder(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,NETXP.Library.Edge,System.Collections.ArrayList,System.Int32)">
            <summary>
            Draws the border for a tab stub.
            </summary>
            <param name="item">The tab stub.</param>
            <param name="g">The graphics object.</param>
            <param name="edge">The edge.</param>
            <param name="drawTabs">Array of DrawTab objects.</param>
            <param name="selectedIndex">The selected tab index.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.#ctor">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.#ctor(NETXP.Library.IColorTable)">
            <summary>
            Internal
            </summary>
            <param name="colorTable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.PaintCaption(System.Drawing.Graphics,NETXP.Controls.Docking.DockFrameCaption,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="rectCaption"></param>
            <param name="focused"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.PaintCaptionButton(System.Drawing.Graphics,NETXP.Controls.Docking.CaptionButton,System.Boolean,NETXP.Controls.Docking.ButtonFunction,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="active"></param>
            <param name="function"></param>
            <param name="mouseOver"></param>
            <param name="mouseCapture"></param>
            <param name="popupStyle"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.PaintSizeBar(System.Drawing.Graphics,NETXP.Controls.Docking.SizeBar,System.Windows.Forms.DockStyle)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="dock"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.GetTabPageSpace(System.Drawing.Graphics,NETXP.Controls.Docking.TabPage,System.Boolean,System.Int32,NETXP.Controls.Docking.TabControl,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="page"></param>
            <param name="selectedTextOnly"></param>
            <param name="pageSelected"></param>
            <param name="ctl"></param>
            <param name="boldSelected"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.RecalculateMultilineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,NETXP.Controls.Docking.TabPosition,System.Int32@,System.Int32@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Boolean,System.Int32,System.Boolean,System.Collections.ArrayList@,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xEndPos"></param>
            <param name="tabPosition"></param>
            <param name="tabButtonHeight"></param>
            <param name="appearance"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="tabsAreaRect"></param>
            <param name="pageAreaRect"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="multilineFullWidth"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.RecalculateSinglelineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32@,System.Int32@,System.Boolean,System.Int32,System.Collections.ArrayList@,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xWidth"></param>
            <param name="tabPosition"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
            <param name="startPage"></param>
            <param name="shrinkPagesToFit"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.FillTabBackgrounds(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,NETXP.Controls.Docking.TabPosition)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="pageAreaRect"></param>
            <param name="tabsAreaRect"></param>
            <param name="appearance"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.DrawTabBorders(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="positionAtTop"></param>
            <param name="tabsAreaRect"></param>
            <param name="pixelBorder"></param>
            <param name="pixelArea"></param>
            <param name="hiddenPages"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.DrawTab(NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabPage,System.Drawing.Graphics,System.Boolean,System.Collections.ArrayList,System.Int32,System.Boolean,System.Boolean,System.Boolean,NETXP.Controls.Docking.TabPosition,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="page"></param>
            <param name="g"></param>
            <param name="highlightText"></param>
            <param name="tabRects"></param>
            <param name="imageGapTopExtra"></param>
            <param name="selectedTextOnly"></param>
            <param name="dimUnselected"></param>
            <param name="boldSelected"></param>
            <param name="appearance"></param>
            <param name="multiline"></param>
            <param name="positionAtTop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.DrawAutoHidePanel(NETXP.Controls.Docking.AutoHidePanel,System.Drawing.Graphics)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.DrawVerticalTabOutline(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,System.Boolean,NETXP.Library.Edge)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
            <param name="pre"></param>
            <param name="edge"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.FillVerticalTabBackground(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.OfficeXP.DrawVerticalTabBorder(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,NETXP.Library.Edge,System.Collections.ArrayList,System.Int32)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
            <param name="edge"></param>
            <param name="drawTabs"></param>
            <param name="selectedIndex"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.Renderers.OfficeXP.ColorTable">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Renderers.Office2003">
            <summary>
            Office 2003 style.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.#ctor">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.#ctor(NETXP.Library.IColorTable)">
            <summary>
            Internal
            </summary>
            <param name="colorTable"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.PaintCaption(System.Drawing.Graphics,NETXP.Controls.Docking.DockFrameCaption,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="rectCaption"></param>
            <param name="focused"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.PaintCaptionButton(System.Drawing.Graphics,NETXP.Controls.Docking.CaptionButton,System.Boolean,NETXP.Controls.Docking.ButtonFunction,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="active"></param>
            <param name="function"></param>
            <param name="mouseOver"></param>
            <param name="mouseCapture"></param>
            <param name="popupStyle"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.PaintSizeBar(System.Drawing.Graphics,NETXP.Controls.Docking.SizeBar,System.Windows.Forms.DockStyle)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="dock"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.GetTabPageSpace(System.Drawing.Graphics,NETXP.Controls.Docking.TabPage,System.Boolean,System.Int32,NETXP.Controls.Docking.TabControl,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="page"></param>
            <param name="selectedTextOnly"></param>
            <param name="pageSelected"></param>
            <param name="ctl"></param>
            <param name="boldSelected"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.RecalculateMultilineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,NETXP.Controls.Docking.TabPosition,System.Int32@,System.Int32@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Boolean,System.Int32,System.Boolean,System.Collections.ArrayList@,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xEndPos"></param>
            <param name="tabPosition"></param>
            <param name="tabButtonHeight"></param>
            <param name="appearance"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="tabsAreaRect"></param>
            <param name="pageAreaRect"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="multilineFullWidth"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.RecalculateSinglelineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32@,System.Int32@,System.Boolean,System.Int32,System.Collections.ArrayList@,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xWidth"></param>
            <param name="tabPosition"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
            <param name="startPage"></param>
            <param name="shrinkPagesToFit"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.FillTabBackgrounds(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,NETXP.Controls.Docking.TabPosition)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="pageAreaRect"></param>
            <param name="tabsAreaRect"></param>
            <param name="appearance"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.DrawTabBorders(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="positionAtTop"></param>
            <param name="tabsAreaRect"></param>
            <param name="pixelBorder"></param>
            <param name="pixelArea"></param>
            <param name="hiddenPages"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.DrawTab(NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabPage,System.Drawing.Graphics,System.Boolean,System.Collections.ArrayList,System.Int32,System.Boolean,System.Boolean,System.Boolean,NETXP.Controls.Docking.TabPosition,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="page"></param>
            <param name="g"></param>
            <param name="highlightText"></param>
            <param name="tabRects"></param>
            <param name="imageGapTopExtra"></param>
            <param name="selectedTextOnly"></param>
            <param name="dimUnselected"></param>
            <param name="boldSelected"></param>
            <param name="appearance"></param>
            <param name="multiline"></param>
            <param name="positionAtTop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.DrawAutoHidePanel(NETXP.Controls.Docking.AutoHidePanel,System.Drawing.Graphics)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.DrawVerticalTabOutline(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,System.Boolean,NETXP.Library.Edge)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
            <param name="pre"></param>
            <param name="edge"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.FillVerticalTabBackground(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.Office2003.DrawVerticalTabBorder(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,NETXP.Library.Edge,System.Collections.ArrayList,System.Int32)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
            <param name="edge"></param>
            <param name="drawTabs"></param>
            <param name="selectedIndex"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.Renderers.Office2003.ColorTable">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Renderers.WindowsDefault">
            <summary>
            Windows Default style.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.PaintCaption(System.Drawing.Graphics,NETXP.Controls.Docking.DockFrameCaption,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="rectCaption"></param>
            <param name="focused"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.PaintCaptionButton(System.Drawing.Graphics,NETXP.Controls.Docking.CaptionButton,System.Boolean,NETXP.Controls.Docking.ButtonFunction,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="active"></param>
            <param name="function"></param>
            <param name="mouseOver"></param>
            <param name="mouseCapture"></param>
            <param name="popupStyle"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.PaintSizeBar(System.Drawing.Graphics,NETXP.Controls.Docking.SizeBar,System.Windows.Forms.DockStyle)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="item"></param>
            <param name="dock"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.GetTabPageSpace(System.Drawing.Graphics,NETXP.Controls.Docking.TabPage,System.Boolean,System.Int32,NETXP.Controls.Docking.TabControl,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="g"></param>
            <param name="page"></param>
            <param name="selectedTextOnly"></param>
            <param name="pageSelected"></param>
            <param name="ctl"></param>
            <param name="boldSelected"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.RecalculateMultilineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,NETXP.Controls.Docking.TabPosition,System.Int32@,System.Int32@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Boolean,System.Int32,System.Boolean,System.Collections.ArrayList@,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xEndPos"></param>
            <param name="tabPosition"></param>
            <param name="tabButtonHeight"></param>
            <param name="appearance"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="tabsAreaRect"></param>
            <param name="pageAreaRect"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="multilineFullWidth"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.RecalculateSinglelineTabs(NETXP.Controls.Docking.TabControl,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32@,System.Int32@,System.Boolean,System.Int32,System.Collections.ArrayList@,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="xStartPos"></param>
            <param name="xWidth"></param>
            <param name="tabPosition"></param>
            <param name="topYPos"></param>
            <param name="bottomYPos"></param>
            <param name="positionAtTop"></param>
            <param name="pageSelected"></param>
            <param name="tabRects"></param>
            <param name="selectedTextOnly"></param>
            <param name="boldSelected"></param>
            <param name="startPage"></param>
            <param name="shrinkPagesToFit"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.FillTabBackgrounds(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,NETXP.Controls.Docking.TabPosition)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="pageAreaRect"></param>
            <param name="tabsAreaRect"></param>
            <param name="appearance"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.DrawTabBorders(NETXP.Controls.Docking.TabControl,System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="positionAtTop"></param>
            <param name="tabsAreaRect"></param>
            <param name="pixelBorder"></param>
            <param name="pixelArea"></param>
            <param name="hiddenPages"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.DrawTab(NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabPage,System.Drawing.Graphics,System.Boolean,System.Collections.ArrayList,System.Int32,System.Boolean,System.Boolean,System.Boolean,NETXP.Controls.Docking.TabPosition,System.Boolean,System.Boolean)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="ctl"></param>
            <param name="page"></param>
            <param name="g"></param>
            <param name="highlightText"></param>
            <param name="tabRects"></param>
            <param name="imageGapTopExtra"></param>
            <param name="selectedTextOnly"></param>
            <param name="dimUnselected"></param>
            <param name="boldSelected"></param>
            <param name="appearance"></param>
            <param name="multiline"></param>
            <param name="positionAtTop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.DrawAutoHidePanel(NETXP.Controls.Docking.AutoHidePanel,System.Drawing.Graphics)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.DrawVerticalTabOutline(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,System.Boolean,NETXP.Library.Edge)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
            <param name="pre"></param>
            <param name="edge"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.FillVerticalTabBackground(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Renderers.WindowsDefault.DrawVerticalTabBorder(NETXP.Controls.Docking.VerticalTab,System.Drawing.Graphics,NETXP.Library.Edge,System.Collections.ArrayList,System.Int32)">
            <summary>
            Internal. See <see cref="T:NETXP.Controls.Docking.IDockingRenderer"/>
            </summary>
            <param name="item"></param>
            <param name="g"></param>
            <param name="edge"></param>
            <param name="drawTabs"></param>
            <param name="selectedIndex"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.Restore">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Restore.m_child">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.#ctor(NETXP.Controls.Docking.Restore)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.PerformRestore(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.PerformRestore(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.PerformRestore(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="z"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.PerformRestore">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.Reconnect(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.LoadFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Restore.CreateFromXml(System.Xml.XmlTextReader,System.Boolean,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="readIn"></param>
            <param name="formatVersion"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.Restore.Child">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreDockObject">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.RestoreDockObject.m_title">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.RestoreDockObject.m_obj">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObject.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObject.#ctor(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObject.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="obj"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObject.Reconnect(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObject.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObject.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreDockObjectState">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.RestoreDockObjectState.m_state">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectState.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectState.#ctor(NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="state"></param>
            <param name="obj"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectState.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="state"></param>
            <param name="obj"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectState.PerformRestore(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectState.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectState.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreAutoHideState">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideState.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideState.#ctor(NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="state"></param>
            <param name="obj"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideState.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="state"></param>
            <param name="obj"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideState.PerformRestore(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreAutoHideAffinity">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideAffinity.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideAffinity.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="state"></param>
            <param name="obj"></param>
            <param name="next"></param>
            <param name="previous"></param>
            <param name="nextAll"></param>
            <param name="previousAll"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideAffinity.PerformRestore(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreAutoHideAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreDockObjectDockingAffinity">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectDockingAffinity.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectDockingAffinity.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="state"></param>
            <param name="obj"></param>
            <param name="best"></param>
            <param name="next"></param>
            <param name="previous"></param>
            <param name="nextAll"></param>
            <param name="previousAll"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectDockingAffinity.PerformRestore(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectDockingAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectDockingAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreDockObjectFloatingAffinity">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectFloatingAffinity.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectFloatingAffinity.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.State,NETXP.Controls.Docking.DockObject,NETXP.Library.StringCollection,NETXP.Library.StringCollection)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="state"></param>
            <param name="obj"></param>
            <param name="best"></param>
            <param name="associates"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectFloatingAffinity.PerformRestore(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="dm"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectFloatingAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockObjectFloatingAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreDockRegionAffinity">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockRegionAffinity.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockRegionAffinity.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.DockObject,NETXP.Library.StringCollection,NETXP.Library.StringCollection,NETXP.Library.StringCollection)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="obj"></param>
            <param name="best"></param>
            <param name="next"></param>
            <param name="previous"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockRegionAffinity.PerformRestore(NETXP.Controls.Docking.DockRegion)">
            <summary>
            Internal.
            </summary>
            <param name="z"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockRegionAffinity.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreDockRegionAffinity.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.RestoreWindowObjects">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreWindowObjects.#ctor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreWindowObjects.#ctor(NETXP.Controls.Docking.Restore,NETXP.Controls.Docking.DockObject,NETXP.Library.StringCollection,NETXP.Library.StringCollection,System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <param name="obj"></param>
            <param name="next"></param>
            <param name="previous"></param>
            <param name="selected"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreWindowObjects.PerformRestore(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="w"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreWindowObjects.SaveInternalToXml(System.Xml.XmlTextWriter)">
            <summary>
            Internal.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.RestoreWindowObjects.LoadInternalFromXml(System.Xml.XmlTextReader,System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="xmlIn"></param>
            <param name="formatVersion"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.SizeBar">
            <summary>
            Internal control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.SizeBar.#ctor(NETXP.Library.Direction,NETXP.Controls.Docking.IResizeSource)">
            <summary>
            Internal. Constructs a SizeBar.
            </summary>
            <param name="direction"></param>
            <param name="resizeSource"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.SizeBar.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.SizeBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.SizeBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.SizeBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.SizeBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.SizeBar.Direction">
            <summary>
            Gets or sets the direction of the bar.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.SizeBar.Length">
            <summary>
            Gets or sets the length of the bar.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.SizeBar.Renderer">
            <summary>
            Gets or sets the renderer used to draw the bar.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.SizeBar.ResizeSource">
            <summary>
            Gets or sets the resize source of the bar.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.AutoSizeBar">
            <summary>
            Provides a rendered resize bar.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoSizeBar.#ctor(NETXP.Library.Direction,NETXP.Controls.Docking.IResizeSource)">
            <summary>
            Constructs the resize bar.
            </summary>
            <param name="direction"></param>
            <param name="resizeSource"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.AutoSizeBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.CloseRequestEventArgs">
            <summary>
            Defines event arguments for the tabbed group close request events.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.CloseRequestEventArgs.#ctor(NETXP.Controls.Docking.TabGroupNode,NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabPage)">
            <summary>
            Constructs a new CloseRequestEventArgs object.
            </summary>
            <param name="tgn">The tab group node.</param>
            <param name="tc">The tab control.</param>
            <param name="tp">The tab page.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.CloseRequestEventArgs.Node">
            <summary>
            Retrieves the node.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.CloseRequestEventArgs.TabControl">
            <summary>
            Retrieves the tab control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.CloseRequestEventArgs.TabPage">
            <summary>
            Retrieves the tab page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.CloseRequestEventArgs.Cancel">
            <summary>
            Cancel this event?
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.ContextMenuEventArgs">
            <summary>
            Defines the context menu event arguments.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.ContextMenuEventArgs.#ctor(NETXP.Controls.Docking.TabGroupNode,NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabPage,System.Windows.Forms.ContextMenu)">
            <summary>
            Constructs a new ContextMenuEventArgs object.
            </summary>
            <param name="tgn">The tab group node.</param>
            <param name="tc">The tab control.</param>
            <param name="tp">The tab page.</param>
            <param name="contextMenu">The context menu.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.ContextMenuEventArgs.ContextMenu">
            <summary>
            Gets the context menu.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.PageLoadingEventArgs">
            <summary>
            Defines the loading event arguments.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.PageLoadingEventArgs.#ctor(NETXP.Controls.Docking.TabPage,System.Xml.XmlTextReader)">
            <summary>
            Constructs a new PageLoadingEventArgs object.
            </summary>
            <param name="tp">The tab page.</param>
            <param name="xmlIn">The XML layout data.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.PageLoadingEventArgs.TabPage">
            <summary>
            Gets the tab page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.PageLoadingEventArgs.XmlIn">
            <summary>
            Gets the XML reader.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.PageLoadingEventArgs.Cancel">
            <summary>
            Cancel this event?
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.PageSavingEventArgs">
            <summary>
            Defines the saving event arguments.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.PageSavingEventArgs.#ctor(NETXP.Controls.Docking.TabPage,System.Xml.XmlTextWriter)">
            <summary>
            Constructs a new PageSavingEventArgs object.
            </summary>
            <param name="tp">The tab page.</param>
            <param name="xmlOut">The XML layout data.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.PageSavingEventArgs.TabPage">
            <summary>
            Gets the tab page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.PageSavingEventArgs.XmlOut">
            <summary>
            Gets the XML writer.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups">
            <summary>
            The TabbedGroups control offers automated support for tabbed MDI, similar to
            Visual Studio .NET.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.#ctor">
            <summary>
            Constructs a new TabbedGroups control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.#ctor(NETXP.Controls.Docking.IDockingRenderer)">
            <summary>
            Constructs a new TabbedGroups control with the specified renderer.
            </summary>
            <param name="renderer">The renderer to use.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.Dispose(System.Boolean)">
            <summary>
            Internal
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetRenderer">
            <summary>
            Resets the default renderer.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSizeBarWidth">
            <summary>
            Resets the width of the size bar.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSizeBarLock">
            <summary>
            Resets size bar lock.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetLayoutLock">
            <summary>
            Resets layout lock.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSelectedNode">
            <summary>
            Resets the selected node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetCompactOptions">
            <summary>
            Resets compact options.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetDefaultGroupMinimumWidth">
            <summary>
            Resets the default group's minimum width.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetDefaultGroupMinimumHeight">
            <summary>
            Resets the default group's minimum height.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeCloseShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetCloseShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeSelectedShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSelectedShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeProportionalResizeShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetProportionalResizeShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeMovePreviousShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetMovePreviousShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeMoveNextShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetMoveNextShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeSplitVerticalShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSplitVerticalShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeSplitHorizontalShortcut">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSplitHorizontalShortcut">
            <summary>
            Resets a shortcut key.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetDisplayTabMode">
            <summary>
            Resets the tabbed group display mode.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetSaveControls">
            <summary>
            Resets save controls.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ShouldSerializeDirty">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetDirty">
            <summary>
            Resets dirty.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetPageCloseWhenEmpty">
            <summary>
            Resets page close when empty.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetAutoCalculateDirty">
            <summary>
            Resets auto calculate dirty.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetActiveNode">
            <summary>
            Resets the active node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetAtLeastOneNode">
            <summary>
            Reset at least one node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ResetAutoCompact">
            <summary>
            Resets autocompact.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ProportionalResize">
            <summary>
            Resizes all nodes proportionally.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.ProportionalResize(System.Boolean)">
            <summary>
            Resizes all nodes proportionally, optionally recursing.
            </summary>
            <param name="recurse">Recurse?</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.Compact">
            <summary>
            Compacts nodes.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.Compact(NETXP.Controls.Docking.TabbedGroups.CompactFlags)">
            <summary>
            Compacts nodes given compact flags.
            </summary>
            <param name="flags">Compact flags.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.FirstNode">
            <summary>
            Finds the first node.
            </summary>
            <returns>The first node.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.LastNode">
            <summary>
            Finds the last node.
            </summary>
            <returns>The last node.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.NextNode(NETXP.Controls.Docking.TabGroupNode)">
            <summary>
            Finds the next node.
            </summary>
            <param name="current">Current node.</param>
            <returns>The next node.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.PreviousNode(NETXP.Controls.Docking.TabGroupNode)">
            <summary>
            Finds the previous node.
            </summary>
            <param name="current">Current node.</param>
            <returns>The previous node.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnTabControlCreated(NETXP.Controls.Docking.TabControl)">
            <summary>
            Internal
            </summary>
            <param name="tc"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnPageCloseRequested(NETXP.Controls.Docking.CloseRequestEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnPageContextMenu(NETXP.Controls.Docking.ContextMenuEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnGlobalSaving(System.Xml.XmlTextWriter)">
            <summary>
            Internal
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnGlobalLoading(System.Xml.XmlTextReader)">
            <summary>
            Internal
            </summary>
            <param name="xmlIn"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnPageSaving(NETXP.Controls.Docking.PageSavingEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnPageLoading(NETXP.Controls.Docking.PageLoadingEventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnSelectedNodeChanged(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnActiveNodeChanged(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnDirtyChanged(System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.OnExternalDrop(NETXP.Controls.Docking.TabGroupNode,NETXP.Controls.Docking.TabControl,NETXP.Controls.Docking.TabbedGroups.DragProvider)">
            <summary>
            Internal
            </summary>
            <param name="tgl"></param>
            <param name="tc"></param>
            <param name="dp"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.BeginInit">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.EndInit">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SaveConfigToArray">
            <summary>
            Saves layout to binary format.
            </summary>
            <returns>Layout as binary.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SaveConfigToArray(System.Text.Encoding)">
            <summary>
            Saves layout to binary format.
            </summary>
            <param name="encoding">Encoding.</param>
            <returns>Layout as binary.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SaveConfigToFile(System.String)">
            <summary>
            Saves layout to file.
            </summary>
            <param name="filename">The file.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SaveConfigToFile(System.String,System.Text.Encoding)">
            <summary>
            Saves layout to file.
            </summary>
            <param name="filename">File.</param>
            <param name="encoding">Encoding.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SaveConfigToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves layout to stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="encoding">Encoding.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.LoadConfigFromArray(System.Byte[])">
            <summary>
            Loads layout from binary.
            </summary>
            <param name="buffer">Buffer.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.LoadConfigFromFile(System.String)">
            <summary>
            Loads layout from file.
            </summary>
            <param name="filename">File name.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.LoadConfigFromStream(System.IO.Stream)">
            <summary>
            Loads layout from stream.
            </summary>
            <param name="stream">Stream.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.RecursiveFindNodeInSequence(NETXP.Controls.Docking.TabGroupSequence,System.Boolean)">
            <summary>
            Internal
            </summary>
            <param name="tgs"></param>
            <param name="forwards"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.RecursiveFindNodeInSequence(NETXP.Controls.Docking.TabGroupSequence,NETXP.Controls.Docking.TabGroupBase,System.Boolean)">
            <summary>
            Internal
            </summary>
            <param name="tgs"></param>
            <param name="tgb"></param>
            <param name="forwards"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.MoveActiveInSequence(NETXP.Controls.Docking.TabGroupSequence,NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Internal
            </summary>
            <param name="tgs"></param>
            <param name="child"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.RecursiveActiveInSequence(NETXP.Controls.Docking.TabGroupSequence,System.Boolean)">
            <summary>
            Internal
            </summary>
            <param name="tgs"></param>
            <param name="forwards"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.Notify(NETXP.Controls.Docking.TabGroupBase.NotifyCode)">
            <summary>
            Internal
            </summary>
            <param name="notifyCode"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Internal
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.TestShortcut(System.Windows.Forms.Shortcut)">
            <summary>
            Internal
            </summary>
            <param name="sc"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SelectNextTab">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SelectPreviousTab">
            <summary>
            Internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SelectFirstPage">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.SelectLastPage">
            <summary>
            Internal
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.TabControlCreated">
            <summary>
            Raised when the tab control is created.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.PageCloseRequest">
            <summary>
            Raised when a page is about to be closed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.PageContextMenu">
            <summary>
            Raised when a page's context menu is shown.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.GlobalSaving">
            <summary>
            Raised when global layout is being saved.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.GlobalLoading">
            <summary>
            Raised when global layout is being loaded.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.PageSaving">
            <summary>
            Raised when page layout is being saved.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.PageLoading">
            <summary>
            Raised when page layout is being loaded.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.SelectedNodeChanged">
            <summary>
            Raised when the selected tabbed node is changed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.ActiveNodeChanged">
            <summary>
            Raised when the active tabbed node has changed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.DirtyChanged">
            <summary>
            Raised when the Dirty property has changed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabbedGroups.ExternalDrop">
            <summary>
            Raised when an external drag source has been dropped onto a node.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.Renderer">
            <summary>
            Gets or sets the renderer for the tabbed groups.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.RootSequence">
            <summary>
            Gets the main tab group sequence.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SizeBarWidth">
            <summary>
            Gets or sets the width of the size bar.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SizeBarLock">
            <summary>
            Should all size bars be locked?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.LayoutLock">
            <summary>
            Should layout be locked?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SelectedNode">
            <summary>
            Gets or sets the selected node.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.CompactOptions">
            <summary>
            Gets or sets compact options.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.DefaultGroupMinimumWidth">
            <summary>
            Gets or sets the minimum width of the default group.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.DefaultGroupMinimumHeight">
            <summary>
            Gets or sets the minimum height of the default group.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.CloseShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SelectedShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.ProportionalResizeShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.MovePreviousShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.MoveNextShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SplitVerticalShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SplitHorizontalShortcut">
            <summary>
            Gets or sets a shortcut key.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.DisplayTabMode">
            <summary>
            Gets or sets the tabbed group display mode.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.SaveControls">
            <summary>
            Save the names of contained controls?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.Dirty">
            <summary>
            Mark the layout as dirty? (Needs to be saved)
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.PageCloseWhenEmpty">
            <summary>
            Close a page when empty?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.AutoCalculateDirty">
            <summary>
            Auto-update the Dirty flag?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.ActiveNode">
            <summary>
            Gets or sets the active node.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.AtLeastOneNode">
            <summary>
            Always show at least one node?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.AutoCompact">
            <summary>
            Automatically compact nodes?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.Initializing">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.DragProvider">
            <summary>
            Defines a drag provider.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.DragProvider.#ctor">
            <summary>
            Constructs a new DragProvider.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabbedGroups.DragProvider.#ctor(System.Object)">
            <summary>
            Constructs a new DragProvider with the given tag.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.TabbedGroups.DragProvider.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.DisplayTabModes">
            <summary>
            Specifies modes for showing/hiding tabbed groups.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.DisplayTabModes.HideAll">
            <summary>
            Hide all tabbed groups.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.DisplayTabModes.ShowAll">
            <summary>
            Show all tabbed groups.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.DisplayTabModes.ShowActiveNode">
            <summary>
            Show only the active tabbed group.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.DisplayTabModes.ShowMouseOver">
            <summary>
            Show only on mouse over.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.DisplayTabModes.ShowActiveAndMouseOver">
            <summary>
            Show only the active tabbed group or the mouse-over group.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.CompactFlags">
            <summary>
            Flags for compacting tabbed groups.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.CompactFlags.RemoveEmptyTabNode">
            <summary>
            Removes empty tabbed groups.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.CompactFlags.RemoveEmptyTabSequence">
            <summary>
            Removes empty tabbed sequences.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.CompactFlags.ReduceSingleEntries">
            <summary>
            Reduces single entries.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.CompactFlags.ReduceSameDirection">
            <summary>
            Reduces entries in the same direction.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabbedGroups.CompactFlags.All">
            <summary>
            All flags.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.TabControlCreatedHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.PageCloseRequestHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.PageContextMenuHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.GlobalSavingHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.GlobalLoadingHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.PageSavingHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.PageLoadingHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabbedGroups.ExternalDropHandler">
            <summary>
            Defines an event handler.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabControl">
            <summary>
            A tab control with extended features.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.#ctor">
            <summary>
            Constructs a new TabControl.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.BeginUpdate">
            <summary>
            Begins a series of updates. Suspends all redrawing.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.EndUpdate">
            <summary>
            Ends a series of updates. Refreshes the control.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.Dispose(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetAllowDrop">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetTabPosition">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetDragDropReorder">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetDragOverSelect">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetHotTrack">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetPositionTop">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetShowClose">
            <summary>
            Internal.................:)
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetShowArrows">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetShrinkPagesToFit">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetBoldSelectedPage">
            <summary>
            Bold selected page?
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetMultilineFullWidth">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetMultiline">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetControlLeftOffset">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetControlTopOffset">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetControlRightOffset">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetControlBottomOffset">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetInsetBorderPagesOnly">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetPixelBorder">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetPixelArea">
            <summary>
            Pixel area?
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetSelectedTextOnly">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetMouseLeaveTimeout">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetDragFromControl">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetHideTabsMode">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetHoverSelect">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ResetRecordFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.TabPageFromPoint(System.Drawing.Point)">
            <summary>
            Gets a tab page at a specified point.
            </summary>
            <param name="mousePos">Point.</param>
            <returns>Tab page.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.MakePageVisible(NETXP.Controls.Docking.TabPage)">
            <summary>
            Makes a specified tab page visible.
            </summary>
            <param name="page">Tab page to make visible.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.MakePageVisible(System.Int32)">
            <summary>
            Makes a specified tab page visible.
            </summary>
            <param name="index">Index of tab page to make visible.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.ProcessMnemonic(System.Char)">
            <summary>
            Internal.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnResize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnSizeChanged(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPopupMenuDisplay(NETXP.Controls.Docking.TabControl,System.Drawing.Point)">
            <summary>
            Internal.
            </summary>
            <param name="sourceCtl"></param>
            <param name="pt"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnSelectionChanging(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnSelectionChanged(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnClosePressed(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPageGotFocus(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPageLostFocus(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPageDragStart(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPageDragMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPageDragEnd(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPageDragQuit(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnDoubleClickTab(NETXP.Controls.Docking.TabPage)">
            <summary>
            Internal.
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnCloseButton(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnLeftArrow(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnRightArrow(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnDoubleClick(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnMouseEnter(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="qcdevent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.FindIndex(NETXP.Controls.Docking.TabPage)">
            <summary>
            Loops over all the TabPages to find the index of the given TabPage.
            </summary>
            <param name="page">The TabPage we want the index for.</param>
            <returns>The index of the given TabPage(-1 if it isn't found.)</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnDragLeave(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.BeginInit">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.EndInit">
            <summary>
            Internal
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.ClosePressed">
            <summary>
            Close button was pressed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.SelectionChanging">
            <summary>
            Selected tab page is changing.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.SelectionChanged">
            <summary>
            Selected tab page changed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PageGotFocus">
            <summary>
            Tab page got focus.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PageLostFocus">
            <summary>
            Tab page lost focus.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PopupMenuDisplay">
            <summary>
            Context menu is being displayed.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PageDragStart">
            <summary>
            Page dragging has started.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PageDragMove">
            <summary>
            Page dragging is going on.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PageDragEnd">
            <summary>
            Page dragging has ended.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.PageDragQuit">
            <summary>
            Page dragging has quit.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabControl.DoubleClickTab">
            <summary>
            A tab has been double-clicked.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.Controls">
            <summary>
            Controls contained by the tab control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.TabPages">
            <summary>
            Collection of tab pages contained by the tab control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.AllowDrop">
            <summary>
            Should drag and drop be allowed?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.Appearance">
            <summary>
            The position of the tabs in the tab control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.Renderer">
            <summary>
            Renderer used to draw the tab control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.DragDropReorder">
            <summary>
            Reorder pages using drag and drop?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.DragOverSelect">
            <summary>
            Select page when mouse is dragged over it?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.HotTrack">
            <summary>
            Hot-track tab pages?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.TabsAreaRect">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.PositionTop">
            <summary>
            Should tabs be positioned at top?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ShowClose">
            <summary>
            Show the close button?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ShowArrows">
            <summary>
            Show arrows?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ShrinkPagesToFit">
            <summary>
            Shrink pages to fit?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.BoldSelectedPage">
            <summary>
            Bold selected page?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultilineFullWidth">
            <summary>
            Show full-width tab pages for multi-line tab control?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.Multiline">
            <summary>
            Multi-line tab control?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ControlLeftOffset">
            <summary>
            Offset (to the left) of the control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ControlTopOffset">
            <summary>
            Offset (at the top) of the control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ControlRightOffset">
            <summary>
            Offset (to the right) of the control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.ControlBottomOffset">
            <summary>
            Offset (at the bottom) of the control.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.InsetBorderPagesOnly">
            <summary>
            Inset border for pages only?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.PixelBorder">
            <summary>
            Show a one-pixel border around the tab control?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.PixelArea">
            <summary>
            Show a one-pixel border at the top or bottom of the tab area?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.SelectedTextOnly">
            <summary>
            Show text only for selected item?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MouseLeaveTimeout">
            <summary>
            Mouse-leave timeout.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.DragFromControl">
            <summary>
            Drag from control?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.HideTabsMode">
            <summary>
            The mode by which to hide tabs.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.HoverSelect">
            <summary>
            Select on hover?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.RecordFocus">
            <summary>
            Record focus?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.SelectedIndex">
            <summary>
            Index of the selected tab page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.SelectedTab">
            <summary>
            Selected tab page.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabControl.MultiRect">
            <summary>
            Util class for handling multiline calculations.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabControl.MultiRect.#ctor(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Constructs a new MultiRect.
            </summary>
            <param name="rect"></param>
            <param name="index"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultiRect.Index">
            <summary>
            The index of this rectangle.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultiRect.Rect">
            <summary>
            The rectangle encapsulated.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultiRect.X">
            <summary>
            The X coordinate.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultiRect.Y">
            <summary>
            The Y coordinate.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultiRect.Width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabControl.MultiRect.Height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabControl.DoubleClickTabHandler">
            <summary>
            Event handler for when tab is double-clicked.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabControl.PopupMenuHandler">
            <summary>
            Event handler for when a popup menu is about to be shown.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabPosition">
            <summary>
            Enumeration of tab positions.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabPosition.Top">
            <summary>
            Tabs at the top, as in tabbed MDI.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabPosition.Bottom">
            <summary>
            Tabs at the bottom, as in tabbed docking windows.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.HideTabsModes">
            <summary>
            Enumeration of modes that control the display of the tabs area.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.HideTabsModes.ShowAlways">
            <summary>
            Always show tabs.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.HideTabsModes.HideAlways">
            <summary>
            Always hide tabs.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.HideTabsModes.HideUsingLogic">
            <summary>
            Use logic to hide tabs.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.HideTabsModes.HideWithoutMouse">
            <summary>
            Hide without mouse.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabGroupBase">
            <summary>
            The base class for tabbed groups.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.#ctor(NETXP.Controls.Docking.TabbedGroups)">
            <summary>
            Constructs a new tabbed group.
            </summary>
            <param name="tabbedGroups">The parent control.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.#ctor(NETXP.Controls.Docking.TabbedGroups,NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Constructs a new tabbed group.
            </summary>
            <param name="tabbedGroups">The parent control.</param>
            <param name="parent">Parent group.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.InitializeComponent(NETXP.Controls.Docking.TabbedGroups,NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Internal
            </summary>
            <param name="tabbedGroups"></param>
            <param name="parent"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.Dispose">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.Notify(NETXP.Controls.Docking.TabGroupBase.NotifyCode)">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.ContainsSelected(System.Boolean)">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
            <param name="xmlOut"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBase.LoadFromXml(System.Xml.XmlTextReader)">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
            <param name="xmlIn"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.Space">
            <summary>
            Gets or sets the space used up by this tabbed group.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.MinimumSize">
            <summary>
            Gets or sets the minimum size for this tabbed group.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.Parent">
            <summary>
            Gets this group's parent.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.TabbedGroups">
            <summary>
            Gets this group's children.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.Tag">
            <summary>
            Gets or sets an object associated with this group.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.Unique">
            <summary>
            Gets or sets a unique ID for this group.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.Count">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.IsNode">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.IsSequence">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBase.GroupControl">
            <summary>
            Abstract. Must be implemented by derived classes.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabGroupBase.NotifyCode">
            <summary>
            Notification code.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabGroupBase.NotifyCode.StyleChanged">
            <summary>
            Renderer has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabGroupBase.NotifyCode.SelectedChanged">
            <summary>
            Selected item has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabGroupBase.NotifyCode.MinimumSizeChanged">
            <summary>
            Minimum size has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabGroupBase.NotifyCode.SizeBarWidthChanged">
            <summary>
            Size bar width has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabGroupBase.NotifyCode.DisplayTabMode">
            <summary>
            Display tab mode has changed.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabGroupBaseCollection">
            <summary>
            Provides a collection of TabGroupBase objects.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.Add(NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The object.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.AddRange(NETXP.Controls.Docking.TabGroupBase[])">
            <summary>
            Adds an array of objects to the collection.
            </summary>
            <param name="values">The objects.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.Remove(NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Removes an object from the collection.
            </summary>
            <param name="value">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.Insert(System.Int32,NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Inserts an object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.Contains(NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Does the collection contain the specified object?
            </summary>
            <param name="value">The object.</param>
            <returns>True if contains, false if not.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.Contains(NETXP.Controls.Docking.TabGroupBaseCollection)">
            <summary>
            Does the collection contain any of the specified objects?
            </summary>
            <param name="values">The objects.</param>
            <returns>True if at least one is contained.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupBaseCollection.IndexOf(NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Gets the index of an object.
            </summary>
            <param name="value">The object.</param>
            <returns>The index. -1 if not found.</returns>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupBaseCollection.Item(System.Int32)">
            <summary>
            Gets or sets the tab group base at the specified index.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabGroupNode">
            <summary>
            Defines a tab group node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.#ctor(NETXP.Controls.Docking.TabbedGroups,NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Constructs a new tab group node.
            </summary>
            <param name="tabbedGroups">The parent control.</param>
            <param name="parent">The parent group.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.Dispose">
            <summary>
            Implements inherited member.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.DefinePopupMenuForControl(NETXP.Controls.Docking.TabControl)">
            <summary>
            Internal
            </summary>
            <param name="tabControl"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.Notify(NETXP.Controls.Docking.TabGroupBase.NotifyCode)">
            <summary>
            Internal
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.ContainsSelected(System.Boolean)">
            <summary>
            Finds out if the selected node is the same as this node.
            </summary>
            <param name="recurse">Unused</param>
            <returns>True if selected == this.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Saves layout to XML.
            </summary>
            <param name="xmlOut">XML writer.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.LoadFromXml(System.Xml.XmlTextReader)">
            <summary>
            Loads layout from XML.
            </summary>
            <param name="xmlIn">XML reader.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.OnGainedFocus(System.Object,System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.OnClose(System.Object,System.EventArgs)">
            <summary>
            Internal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.OnTabPagesCleared">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.OnTabPagesInserted(System.Int32,System.Object)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.OnTabPagesRemoved(System.Int32,System.Object)">
            <summary>
            Internal
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.OnPopupMenuDisplay(System.Object,NETXP.Controls.Docking.TabControl,System.Drawing.Point)">
            <summary>
            Internal
            </summary>
            <param name="sender"></param>
            <param name="src"></param>
            <param name="pt"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.Close">
            <summary>
            Closes this node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.ToggleSelected">
            <summary>
            Makes this the selected node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.ProportionalResize">
            <summary>
            Resizes this node proportionally.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.MovePrevious">
            <summary>
            Moves to previous node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.MoveNext">
            <summary>
            Moves to next node.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.NewVertical">
            <summary>
            New vertical group.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupNode.NewHorizontal">
            <summary>
            New horizontal group.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.TabGroupNode.ShowContextMenu">
            <summary>
            Raised when the context menu is about to be shown.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupNode.TabPages">
            <summary>
            Gets the tab pages in this node.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupNode.TabControl">
            <summary>
            Gets the tab control for this node.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupNode.Count">
            <summary>
            Gets the number of tab pages.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupNode.IsNode">
            <summary>
            Returns True.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupNode.IsSequence">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupNode.GroupControl">
            <summary>
            Gets the tab control.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabGroupSequence">
            <summary>
            A container for multiple tabbed group nodes.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.#ctor(NETXP.Controls.Docking.TabbedGroups)">
            <summary>
            Creates a new sequence.
            </summary>
            <param name="tabbedGroups">The parent control.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.#ctor(NETXP.Controls.Docking.TabbedGroups,NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Creates a new sequence.
            </summary>
            <param name="tabbedGroups">The parent control.</param>
            <param name="parent">The parent group.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.#ctor(NETXP.Controls.Docking.TabbedGroups,NETXP.Controls.Docking.TabGroupBase,NETXP.Library.Direction)">
            <summary>
            Creates a new sequence.
            </summary>
            <param name="tabbedGroups">The parent control.</param>
            <param name="parent">The parent group.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Dispose">
            <summary>
            Implements inherited member.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.AddNewNode">
            <summary>
            Adds a new empty node.
            </summary>
            <returns>The node.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.InsertNewNode(System.Int32)">
            <summary>
            Inserts a new empty node at index.
            </summary>
            <param name="index">The index.</param>
            <returns>The node.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Remove(NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Removes a node.
            </summary>
            <param name="group">The node.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.IndexOf(NETXP.Controls.Docking.TabGroupBase)">
            <summary>
            Gets the index of the specified node.
            </summary>
            <param name="group">The node.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Clear">
            <summary>
            Removes all children.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Notify(NETXP.Controls.Docking.TabGroupBase.NotifyCode)">
            <summary>
            Internal.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.ProportionalResize(System.Boolean)">
            <summary>
            Resizes all children proportionally.
            </summary>
            <param name="recurse">Go through subgroups?</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.ContainsSelected(System.Boolean)">
            <summary>
            Gets whether or not the selected node is contained in this sequence.
            </summary>
            <param name="recurse">Go through all subgroups?</param>
            <returns>True if the selected node is contained in this sequence.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.SaveToXml(System.Xml.XmlTextWriter)">
            <summary>
            Saves layout to XML.
            </summary>
            <param name="xmlOut">The XML writer.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.LoadFromXml(System.Xml.XmlTextReader)">
            <summary>
            Loads layout from XML.
            </summary>
            <param name="xmlIn">The XML reader.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Compact">
            <summary>
            Compacts all children.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Compact(NETXP.Controls.Docking.TabbedGroups.CompactFlags)">
            <summary>
            Compacts all children.
            </summary>
            <param name="flags">Flags.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.Reposition">
            <summary>
            Updates child layout to reflect new proportional spacing values.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.CanResize(NETXP.Controls.Docking.SizeBar)">
            <summary>
            Can we resize this sequence?
            </summary>
            <param name="bar">The size bar.</param>
            <returns>True if sizing is allowed.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.StartResizeOperation(NETXP.Controls.Docking.SizeBar,System.Drawing.Rectangle@)">
            <summary>
            Begins resize operation.
            </summary>
            <param name="bar">The size bar.</param>
            <param name="screenBoundary">The bounds of the screen.</param>
            <returns>Allow resize operation to occur?</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabGroupSequence.EndResizeOperation(NETXP.Controls.Docking.SizeBar,System.Int32)">
            <summary>
            Finishes resize operation.
            </summary>
            <param name="bar">The size bar.</param>
            <param name="delta">The change in size.</param>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.Count">
            <summary>
            Gets the number of children.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.IsNode">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.IsSequence">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.GroupControl">
            <summary>
            Gets the control within this sequence.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.Direction">
            <summary>
            Gets the direction.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.Renderer">
            <summary>
            Gets the renderer for the sequence.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.SizeBarWidth">
            <summary>
            Gets the width of the size bar.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.BackgroundColor">
            <summary>
            Gets the background color.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabGroupSequence.Item(System.Int32)">
            <summary>
            Gets the node at the index.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabPage">
            <summary>
            A tab page for <c>NETXP.Controls.Docking.TabControl</c>
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPage.#ctor">
            <summary>
            Constructs a new tab page.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPage.#ctor(System.String)">
            <summary>
            Constructs a new tab page with the specified title.
            </summary>
            <param name="title">The title of the page.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPage.#ctor(System.String,System.Windows.Forms.Control)">
            <summary>
            Constructs a new tab page with the specified title and containing the specified control.
            </summary>
            <param name="title">The title of the page.</param>
            <param name="control">The control to be contained.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPage.#ctor(System.String,System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            Constructs a new tab page with the specified title,
            containing the specified control, and having the specified icon.
            </summary>
            <param name="title">The title of the page.</param>
            <param name="control">The control the page contains.</param>
            <param name="icon">The icon of the page.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPage.OnPropertyChanged(NETXP.Controls.Docking.TabPage.Property,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="prop"></param>
            <param name="oldValue"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPage.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:NETXP.Controls.Docking.TabPage.PropertyChanged">
            <summary>
            A property has changed.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.Title">
            <summary>
            The title of the page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.ToolTipText">
            <summary>
            The text shown by the tooltip of the page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.Control">
            <summary>
            The control contained by the page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.Icon">
            <summary>
            The image or icon of the page.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.Selected">
            <summary>
            Is this page selected?
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.StartFocus">
            <summary>
            The control that starts focused.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPage.Font">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabPage.Property">
            <summary>
            Enumeration of property change events.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabPage.Property.Title">
            <summary>
            Title of the page has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabPage.Property.Control">
            <summary>
            Control contained by the page has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabPage.Property.Icon">
            <summary>
            Icon of the page has changed.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.TabPage.Property.Selected">
            <summary>
            Page has been selected or deselected.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabPage.PropChangeHandler">
            <summary>
            The property change event signature.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TabPageCollection">
            <summary>
            A collection of tab pages.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPageCollection.Add(NETXP.Controls.Docking.TabPage)">
            <summary>
            Adds a tab page to the collection.
            </summary>
            <param name="value">The tab page to be added.</param>
            <returns>The index of the tab page.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPageCollection.AddRange(NETXP.Controls.Docking.TabPage[])">
            <summary>
            Adds a bunch of tab pages.
            </summary>
            <param name="values">The tab pages.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPageCollection.Remove(NETXP.Controls.Docking.TabPage)">
            <summary>
            Removes a tab page.
            </summary>
            <param name="value">The tab page.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPageCollection.Insert(System.Int32,NETXP.Controls.Docking.TabPage)">
            <summary>
            Inserts a tab page at the specified location.
            </summary>
            <param name="index">Where to insert tab page.</param>
            <param name="value">Tab page to insert.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPageCollection.Contains(NETXP.Controls.Docking.TabPage)">
            <summary>
            Does the collection contain the specified tab page?
            </summary>
            <param name="value">The tab page.</param>
            <returns>True if the collection contains the specified tab page.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TabPageCollection.IndexOf(NETXP.Controls.Docking.TabPage)">
            <summary>
            Gets the index of a tab page.
            </summary>
            <param name="value">The tab page.</param>
            <returns>The index of the tab page.</returns>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPageCollection.Item(System.Int32)">
            <summary>
            Gets a tab page at the specified index.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.TabPageCollection.Item(System.String)">
            <summary>
            Gets a tab page with the specified title.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Target">
            <summary>
            Defines a drag target.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Target.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,NETXP.Controls.Docking.TabGroupNode,NETXP.Controls.Docking.Target.TargetActions)">
            <summary>
            Internal.
            </summary>
            <param name="hotRect"></param>
            <param name="drawRect"></param>
            <param name="node"></param>
            <param name="action"></param>
        </member>
        <member name="P:NETXP.Controls.Docking.Target.HotRect">
            <summary>
            Internal
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Target.DrawRect">
            <summary>
            Internal
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Target.Node">
            <summary>
            Internal
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Target.Action">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Target.TargetActions">
            <summary>
            Target actions.
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Target.TargetActions.Transfer">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Target.TargetActions.GroupLeft">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Target.TargetActions.GroupRight">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Target.TargetActions.GroupTop">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:NETXP.Controls.Docking.Target.TargetActions.GroupBottom">
            <summary>
            Internal
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.TargetManager">
            <summary>
            Defines a drag target manager.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetManager.#ctor(NETXP.Controls.Docking.TabbedGroups,NETXP.Controls.Docking.TabGroupNode,NETXP.Controls.Docking.TabControl)">
            <summary>
            Internal
            </summary>
            <param name="host"></param>
            <param name="node"></param>
            <param name="source"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetManager.MouseMove(System.Drawing.Point)">
            <summary>
            Internal
            </summary>
            <param name="mousePos"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetManager.Exit">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetManager.Quit">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetManager.DrawDragRectangle(System.Drawing.Rectangle)">
            <summary>
            Internal
            </summary>
            <param name="rect"></param>
        </member>
        <member name="T:NETXP.Controls.Docking.TargetCollection">
            <summary>
            Represents a collection of Target objects.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.Add(NETXP.Controls.Docking.Target)">
            <summary>
            Adds an object to the collection.
            </summary>
            <param name="value">The object.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.AddRange(NETXP.Controls.Docking.Target[])">
            <summary>
            Adds an array of objects to the collection.
            </summary>
            <param name="values">The objects.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.Remove(NETXP.Controls.Docking.Target)">
            <summary>
            Removes an object from the collection.
            </summary>
            <param name="value">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.Insert(System.Int32,NETXP.Controls.Docking.Target)">
            <summary>
            Inserts an object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.Contains(NETXP.Controls.Docking.Target)">
            <summary>
            Does the collection contain the specified object?
            </summary>
            <param name="value">The object.</param>
            <returns>True if contains, false if not.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.IndexOf(NETXP.Controls.Docking.Target)">
            <summary>
            Gets the index of an object.
            </summary>
            <param name="value">The object.</param>
            <returns>The index. -1 if not found.</returns>
        </member>
        <member name="M:NETXP.Controls.Docking.TargetCollection.Contains(System.Drawing.Point)">
            <summary>
            Gets the target that contains the specified point.
            </summary>
            <param name="pt">The point.</param>
            <returns>The target.</returns>
        </member>
        <member name="P:NETXP.Controls.Docking.TargetCollection.Item(System.Int32)">
            <summary>
            Gets or sets the target at the specified index.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.VerticalTab">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.#ctor(NETXP.Controls.Docking.IDockingRenderer)">
            <summary>
            Internal.
            </summary>
            <param name="renderer"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.Dispose(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnPageClicked(System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnPageOver(System.Int32)">
            <summary>
            Internal.
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnPagesLeave">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnMouseLeave(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnResize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.VerticalTabVector(System.Drawing.Font)">
            <summary>
            Internal.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.AdjustRectForEdge(System.Drawing.Rectangle@)">
            <summary>
            Internal.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.VerticalTab.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:NETXP.Controls.Docking.VerticalTab.PageClicked">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.VerticalTab.PageOver">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="E:NETXP.Controls.Docking.VerticalTab.PagesLeave">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.VerticalTab.TabPages">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.VerticalTab.Edging">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.VerticalTab.SelectedIndex">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.VerticalTab.Font">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.VerticalTab.BackColor">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.VerticalTab.WindowObjectsTabbed">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.VerticalTab.VerticalTabIndexHandler">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.VerticalTab.VerticalTabHandler">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.Window">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.#ctor(NETXP.Controls.Docking.DockingManager)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.OnDetailsClearing">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.OnDetailInserted(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.OnDetailRemoving(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyFullTitleText(System.String)">
            <summary>
            Internal.
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyAutoHideImage(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="autoHidden"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyShowCaptionBar(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyCloseButton(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyHideButton(System.Boolean)">
            <summary>
            Internal.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyDockObjectGotFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.NotifyDockObjectLostFocus">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.DockFrameGotFocus(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="wd"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.DockFrameLostFocus(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="wd"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.HideDetails">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.ShowDetails">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.OnFullTitleChanged(System.String)">
            <summary>
            Internal.
            </summary>
            <param name="fullTitle"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.RecordRestore(System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.Window.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="E:NETXP.Controls.Docking.Window.FullTitleChanged">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.DockingManager">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.State">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.ParentDockRegion">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.DockFrames">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.DockRegionArea">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.MinimalSize">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.AutoDispose">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.FullTitle">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.Window.RedockAllowed">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.WindowCollection">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowCollection.Add(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowCollection.AddRange(NETXP.Controls.Docking.Window[])">
            <summary>
            Internal.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowCollection.Remove(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowCollection.Insert(System.Int32,NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowCollection.Contains(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowCollection.IndexOf(NETXP.Controls.Docking.Window)">
            <summary>
            Internal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.WindowCollection.Item(System.Int32)">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.WindowObjects">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.#ctor(NETXP.Controls.Docking.DockingManager,NETXP.Controls.Docking.IDockingRenderer)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="renderer"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.BringDockObjectToFront(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.OnDockObjectsClearing">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.OnDockObjectInserted(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.OnDockObjectRemoving(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.OnDockObjectRemoved(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.ComputeMinSize">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.OnDockObjectChanged(NETXP.Controls.Docking.DockObject,NETXP.Controls.Docking.DockObject.Property)">
            <summary>
            Internal.
            </summary>
            <param name="obj"></param>
            <param name="prop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjects.Suicide">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.WindowObjects.DockObjects">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="T:NETXP.Controls.Docking.WindowObjectsTabbed">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.#ctor(NETXP.Controls.Docking.DockingManager,NETXP.Controls.Docking.IDockingRenderer)">
            <summary>
            Internal.
            </summary>
            <param name="manager"></param>
            <param name="renderer"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.HideCurrentDockObject">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.BringDockObjectToFront(NETXP.Controls.Docking.DockObject)">
            <summary>
            Internal.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.UpdateNameValue(NETXP.Controls.Docking.UpdateName,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.OnDockObjectsClearing">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.OnDockObjectInserted(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.OnDockObjectRemoving(System.Int32,System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.DockFrameGotFocus(NETXP.Controls.Docking.DockFrame)">
            <summary>
            Internal.
            </summary>
            <param name="wd"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.AddHotDockRegions(NETXP.Controls.Docking.Redocker,NETXP.Controls.Docking.HotDockRegionCollection)">
            <summary>
            Internal.
            </summary>
            <param name="redock"></param>
            <param name="collection"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.OnDockObjectChanged(NETXP.Controls.Docking.DockObject,NETXP.Controls.Docking.DockObject.Property)">
            <summary>
            Internal.
            </summary>
            <param name="obj"></param>
            <param name="prop"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.OnResize(System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.RecordRestore(System.Object)">
            <summary>
            Internal.
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:NETXP.Controls.Docking.WindowObjectsTabbed.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Internal.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="P:NETXP.Controls.Docking.WindowObjectsTabbed.CurrentDockObject">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="P:NETXP.Controls.Docking.WindowObjectsTabbed.TabControl">
            <summary>
            Internal.
            </summary>
        </member>
    </members>
</doc>
